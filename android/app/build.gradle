plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}



//def flutterVersionCode = project.hasProperty('flutter.versionCode') ? project.flutterVersionCode.toInteger() : 48
//def flutterVersionName = project.hasProperty('flutter.versionName') ? project.flutterVersionName : "1.0.23"

android {

    namespace "com.burobd.buro_employee"
    compileSdkVersion 36

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.burobd.buro_employee"
        minSdkVersion 21
        targetSdkVersion 36
        versionCode flutter.versionCode
        versionName flutter.versionName
        multiDexEnabled true
    }



    signingConfigs {


        create("release") {  // Need to change it with variable, read from file
            storeFile = file("upload-keystore.jks")
            storePassword = "937650"
            keyAlias = "upload"
            keyPassword = "937650"
        }

      /*  release {
             storeFile = file("upload-keystore.jks")
            storePassword key.properties["storePassword"]
            keyAlias key.properties["keyAlias"]
            keyPassword key.properties["keyPassword"]
        }*/

      /*  release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }*/
    }


    buildTypes {
       /* debug {
            signingConfig signingConfigs.debug
        }*/

        debug {
            debuggable true  // âœ… Debugging enabled for debug builds
            signingConfig signingConfigs.debug
        }
        release {
            //signingConfig = signingConfigs.getByName("release")

            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false


        }
    }
  /*  buildTypes {

        debug {
            signingConfig signingConfigs.debug
        }
        release {
            //signingConfig signingConfigs.release
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }*/

}

flutter {
    source '../..'
}


