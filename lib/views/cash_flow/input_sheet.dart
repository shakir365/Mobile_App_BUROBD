import 'package:buro_employee/views/cash_flow/cash_flow_main.dart';

import 'package:flutter/material.dart';

import '../../localization/Language/languages.dart';
import '../../repository/bloc/acash_flow/bank_balance/bank_balance_cubit.dart';
import '../../repository/bloc/acash_flow/business_expense_monthly/business_expense_monthly_cubit.dart';
import '../../repository/bloc/acash_flow/buyer_verification/buyer_verification_cubit.dart';
import '../../repository/bloc/acash_flow/enterprise_details/enterprise_details_cubit.dart';
import '../../repository/bloc/acash_flow/existing_loans/existing_loans_cubit.dart';
import '../../repository/bloc/acash_flow/other_income_monthly/other_income_monthly_cubit.dart';
import '../../repository/bloc/acash_flow/personal_expense_monthly/personal_expense_monthly_cubit.dart';
import '../../repository/bloc/acash_flow/personal_reference_verification/personal_reference_verification_cubit.dart';
import '../../repository/bloc/acash_flow/proposed_loan_details/proposed_loan_details_cubit.dart';
import '../../repository/bloc/acash_flow/purchase_cash_book/purchase_cash_book_cubit.dart';
import '../../repository/bloc/acash_flow/purchases/purchases_cubit.dart';
import '../../repository/bloc/acash_flow/qualitative_aspects/qualitative_aspects_cubit.dart';
import '../../repository/bloc/acash_flow/regular_investment/regular_investment_cubit.dart';
import '../../repository/bloc/acash_flow/sales/sales_cubit.dart';
import '../../repository/bloc/acash_flow/sales_cash_book/sales_cash_book_cubit.dart';
import '../../repository/bloc/acash_flow/stock/stock_cubit.dart';
import '../../repository/bloc/acash_flow/supplier_verification/supplier_verification_cubit.dart';
import '../../repository/bloc/customer_list/customer_list_cubit.dart';
import '../../repository/bloc/manufecturing_option_one/manufecturing_option_one_cubit.dart';
import '../../repository/bloc/menufacturing_option_two/menufacturing_option_two_cubit.dart';
import '../../repository/bloc/product_purchase_prize/product_purchase_prize_cubit.dart';
import '../../repository/bloc/product_sale_price/product_sale_price_cubit.dart';
import '../../repository/models/customer_details.dart';
import '../../repository/models/customer_details_edit.dart';
import '../../repository/models/customer_details_input.dart';
import '../../repository/network/buro_repository.dart';
import '../../theme/colors.dart';
import '../../theme/styles.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import '../../utilities/common_methods.dart';
import 'output_sheet.dart';
import 'package:google_fonts/google_fonts.dart';

class InputSheet extends StatefulWidget {
  static const String routeName = '/InputSheet';
  final CustomerDetailsArguments arguments;

  const InputSheet(this.arguments, {Key? key}) : super(key: key);

  @override
  _InputSheetState createState() => _InputSheetState();
}

class _InputSheetState extends State<InputSheet>
    with SingleTickerProviderStateMixin {
  late final tabController;
  List<String> titles = <String>[
    'Sales Memo/\nCash Book', //7
    'Purchase Memo /\n Cash Book', //8
    'Bank Balance', //9
    'Sales', //10
    'Purchases', //11
    'Stock', //12
    'Business Expense\n - Monthly', //13
    'Other Income', //14
    'Personal Expense\n Monthly', //15
    'Existing Loans', //16
    'Regular \n Investment', //17
    'Product/Service\n Sale Price', //18
    'Product/Service\n Purchase Price', //19
    'Manufacturing \nOption 1', //20
    'Manufacturing \nOption 2', //21
    'Qualitative \nAspects', //22
  ];

  // Sales Cash Book
  //last month
  late TextEditingController salesMemolastMonthFifth;
  late TextEditingController salesMemolastMonthTenth;
  late TextEditingController salesMemolastMonthFifteen;
  late TextEditingController salesMemolastMonthTwenty;
  late TextEditingController salesMemolastMonthTwentyFive;
  late TextEditingController salesMemolastMonthThirty;

  late TextEditingController salesMemotwoMonthBackFifth;
  late TextEditingController salesMemotwoMonthBackTenth;
  late TextEditingController salesMemotwoMonthBackFifteen;
  late TextEditingController salesMemotwoMonthBackTwenty;
  late TextEditingController salesMemotwoMonthBackTwentyFive;
  late TextEditingController salesMemotwoMonthBackThirty;

  late TextEditingController salesMemothreeMonthBackFifth;
  late TextEditingController salesMemothreeMonthBackTenth;
  late TextEditingController salesMemothreeMonthBackFifteen;
  late TextEditingController salesMemothreeMonthBackTwenty;
  late TextEditingController salesMemothreeMonthBackTwentyFive;
  late TextEditingController salesMemothreeMonthBackThirty;

  // Purchase cash Book

  late TextEditingController purchaselastMonthFifth;
  late TextEditingController purchaselastMonthFifteen;
  late TextEditingController purchaselastMonthTwentyFive;

  late TextEditingController purchasetwoMonthBackFifth;
  late TextEditingController purchasetwoMonthBackFifteen;
  late TextEditingController purchasetwoMonthBackTwentyFive;

  late TextEditingController purchasethreeMonthBackFifth;
  late TextEditingController purchasethreeMonthBackFifteen;
  late TextEditingController purchasethreeMonthBackTwentyFive;

  // Bank Balance

  late TextEditingController banklastMonthFifth;
  late TextEditingController banklastMonthFifteen;
  late TextEditingController banklastMonthTwentyFive;

  late TextEditingController banktwoMonthBackFifth;
  late TextEditingController banktwoMonthBackFifteen;
  late TextEditingController banktwoMonthBackTwentyFive;

  late TextEditingController bankthreeMonthBackFifth;
  late TextEditingController bankthreeMonthBackFifteen;
  late TextEditingController bankthreeMonthBackTwentyFive;

  late TextEditingController bankfourMonthFifth;
  late TextEditingController bankfourMonthFifteen;
  late TextEditingController bankfourMonthTwentyFive;

  late TextEditingController bankfiveMonthBackFifth;
  late TextEditingController bankfiveMonthBackFifteen;
  late TextEditingController bankfiveMonthBackTwentyFive;

  late TextEditingController banksixMonthBackFifth;
  late TextEditingController banksixMonthBackFifteen;
  late TextEditingController banksixMonthBackTwentyFive;

  // Sales

  late TextEditingController salesClosedInWeek;
  late TextEditingController salesNoOfDaysWorkingInMonth;

  late TextEditingController salesDaily;
  late TextEditingController salesWeekly;
  late TextEditingController salesMonthly;
  late TextEditingController salesMonthlyPrevious;

  late TextEditingController salesLowMonthCount;
  late TextEditingController salesLowAmount;
  late TextEditingController salesHighMonthCount;
  late TextEditingController salesHighAmount;
  late TextEditingController salesNormalMonthCount;
  late TextEditingController salesNormalAmount;

  late TextEditingController salesDebtors;
  late TextEditingController salesDebtorsPreviousLoan;
  late TextEditingController salesGrowthPostFunding;

  // Purchase

  late TextEditingController purchaseDaily;
  late TextEditingController purchaseWeekly;
  late TextEditingController purchaseMonthly;
  late TextEditingController purchaseCreditors;
  late TextEditingController purchaseMonthlyPreviousLoan;
  late TextEditingController purchaseCreditorsPreviousLoan;

  // Stock

  late TextEditingController stockFinishedGood;
  late TextEditingController stockFinishedGoodPreviousLoan;
  late TextEditingController stockRawMaterial;
  late TextEditingController stockRawMaterialPreviousLoan;

  // OtherIncomeMonthly

  late TextEditingController agricultureIncome;
  late TextEditingController rentalIncome;
  late TextEditingController familyMemberSalaryIncome;
  late TextEditingController alliedAgriIncome;
  late TextEditingController otherIncome;

  late TextEditingController agricultureIncomePreviousLoan;
  late TextEditingController rentalIncomePreviousLoan;
  late TextEditingController familyMemberSalaryIncomePreviousLoan;
  late TextEditingController alliedAgriIncomePreviousLoan;
  late TextEditingController otherIncomPreviousLoan;

  // Business expense Monthly
  late TextEditingController businessFactoryRent;
  late TextEditingController businessElectricity;
  late TextEditingController businessStaffSalary;
  late TextEditingController businessMobileInternet;
  late TextEditingController businessTransportCost;
  late TextEditingController businessGasNWater;
  late TextEditingController businessRepairNMaintenance;
  late TextEditingController businessDieselForGenerator;
  late TextEditingController businessMarketing;
  late TextEditingController businessLabourExpense;
  late TextEditingController businessBillNSecurity;
  late TextEditingController businessTax;
  late TextEditingController businessEntertainment;
  late TextEditingController businessOtherBusinessExpense;

  late TextEditingController businessFactoryRentPreviousLoan;
  late TextEditingController businessElectricityPreviousLoan;
  late TextEditingController businessStaffSalaryPreviousLoan;
  late TextEditingController businessMobileInternetPreviousLoan;
  late TextEditingController businessTransportCostPreviousLoan;
  late TextEditingController businessGasNWaterPreviousLoan;
  late TextEditingController businessRepairNMaintenancePreviousLoan;
  late TextEditingController businessDieselForGeneratorPreviousLoan;
  late TextEditingController businessMarketingPreviousLoan;
  late TextEditingController businessLabourExpensePreviousLoan;
  late TextEditingController businessBillNSecurityPreviousLoan;
  late TextEditingController businessTaxPreviousLoan;
  late TextEditingController businessEntertainmentPreviousLoan;
  late TextEditingController businessOtherBusinessExpensePreviousLoan;

  // Personal expense Monthly
  late TextEditingController personalExpenseHouseRent;
  late TextEditingController personalExpenseFood;
  late TextEditingController personalExpenseCloth;
  late TextEditingController personalExpenseEducation;
  late TextEditingController personalExpenseElectricity;
  late TextEditingController personalExpenseTransport;
  late TextEditingController personalExpenseMobileInternet;
  late TextEditingController personalExpenseMedical;
  late TextEditingController personalExpenseEntertainment;
  late TextEditingController personalExpenseRepairNMaintenance;
  late TextEditingController personalExpenseMaid;
  late TextEditingController personalExpenseHouseTax;
  late TextEditingController personalExpenseOtherExpense;

  late TextEditingController personalExpenseHouseRentPrevious;
  late TextEditingController personalExpenseFoodPrevious;
  late TextEditingController personalExpenseClothPrevious;
  late TextEditingController personalExpenseEducationPrevious;
  late TextEditingController personalExpenseElectricityPrevious;
  late TextEditingController personalExpenseTransportPrevious;
  late TextEditingController personalExpenseMobileInternetPrevious;
  late TextEditingController personalExpenseMedicalPrevious;
  late TextEditingController personalExpenseEntertainmentPrevious;
  late TextEditingController personalExpenseRepairNMaintenancePrevious;
  late TextEditingController personalExpenseMaidPrevious;
  late TextEditingController personalExpenseHouseTaxPrevious;
  late TextEditingController personalExpenseOtherExpensePrevious;

  // Regular Investment

  late TextEditingController investmentLifeInsurance;
  late TextEditingController investmentGeneralInsurance;
  late TextEditingController investmentDPS;
  late TextEditingController investmentGrossMargin;
  late TextEditingController investmentMonthlyCashInhand;
  late TextEditingController investmentLifeInsurancePreviousLoan;
  late TextEditingController investmentGeneralInsurancePreviousLoan;
  late TextEditingController investmentDPSPreviousLoan;
  late TextEditingController investmentGrossMarginPreviousLoan;
  late TextEditingController investmentMonthlyCashInhandPreviousLoan;

  late TextEditingController promoter;
  late TextEditingController businessActivity;
  late TextEditingController marketNDemand;
  late TextEditingController recommendation;

  // Existing Loan

  late TextEditingController existLoanNameOfInstitute;
  late TextEditingController existLoanAmount;
  late TextEditingController existLoanEmi;
  late TextEditingController existLoanOutstanding;
  late TextEditingController existLoanTenor;
  late TextEditingController existLoanpaidTenor;
  late TextEditingController existLoanBalanceTenor;
  late TextEditingController existloanToBeClosed;
  late TextEditingController existLoanobligate;
  late TextEditingController existLoanpreviousObligate;

  // Manufacturing Option One

  late TextEditingController manufacturingTypeOfProduct;
  late TextEditingController manufacturingNumberOfUnits;
  late TextEditingController manufacturingAverageSalePrize;
  late TextEditingController manufacturingProductionCost;

  late TextEditingController averageSalesCashbookPrevious;
  late TextEditingController averagePurchaseCashbookPrevious;
  late TextEditingController averagebBankBalancePrevious;

  // Manufacturing Option Two

  late TextEditingController materialCost;
  late TextEditingController otherCashCost;
  late TextEditingController averageSaleVolume;
  late TextEditingController debtBurdenManufacturing;
  late TextEditingController debtBurdenPreviousLoan;
  late BuroRepository repository;

  var addSaleProduct = false;
  var addPurchaseProduct = false;
  var addExistingLoan = false;
  var addManufacturingOptionOne = false;
  var addManufacturingOptionTwo = false;

  //var addPurchaseProduct = false;
  late ManufecturingOptionOneCubit manufecturingOptionOneCubit;
  late ManufacturingOptionTwoCubit manufacturingOptionTwoCubit;
  late CustomerListCubit customerListCubit;
  late SupplierVerificationCubit supplierVerificationCubit;
  late BuyerVerificationCubit buyerVerificationCubit;
  late PersonalReferenceVerificationCubit personalReferenceVerificationCubit;

  late SalesCashBookCubit salesCashBookCubit;
  late PurchaseCashBookCubit purchaseCashBookCubit;
  late BankBalanceCubit bankBalanceCubit;
  late SalesCubit salesCubit;
  late PurchasesCubit purchasesCubit;
  late StockCubit stockCubit;
  late BusinessExpenseMonthlyCubit businessExpenseMonthlyCubit;
  late OtherIncomeMonthlyCubit otherIncomeMonthlyCubit;
  late PersonalExpenseMonthlyCubit personalExpenseMonthlyCubit;
  late RegularInvestmentCubit regularInvestmentCubit;
  late QualitativeAspectsCubit qualitativeAspectsCubit;

  late ProductSalePriceCubit blocProductSale;
  late ProductPurchasePrizeCubit blocProductPurchase;
  late ExistingLoansCubit existingLoansCubit;

  late EnterpriseDetailsCubit enterpriseDetailsCubit;
  late ProposedLoanDetailsCubit proposedLoanDetailsCubit;

  late TextEditingController productSaleTypeController;
  late TextEditingController productSalePriceController;
  late TextEditingController productSaleUnitsController;

  late TextEditingController productPurchaseTypeController;
  late TextEditingController productPurchasePriceController;
  late TextEditingController productPurchaseUnitsController;
  late TextEditingController memberNumberController;
  late TextEditingController customerNameController;
  late TextEditingController customerStatusController;
  late TextEditingController customerStatusPreviousLoanController;

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: _willPopCallback,
      child: Scaffold(
          appBar: AppBar(
            backgroundColor: ColorResources.APP_THEME_COLOR,
            iconTheme: IconThemeData(color: ColorResources.WHITE),
            title: Center(
              child: Text(
                'Input Sheet',
                style: Styles.appBarTextStyle,
              ),
            ),
            scrolledUnderElevation: 10.0,
            bottom: TabBar(
              labelColor: Colors.white,
              // Selected tab color
              unselectedLabelColor: Colors.black,
              // Unselected tab color
              indicatorColor: Colors.white,
              // Indicator color
              padding: EdgeInsets.all(5),
              isScrollable: true,
              controller: tabController,
              tabs: <Widget>[
                Tab(
                  child: Text(
                    titles[0],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[1],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[2],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[3],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[4],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[5],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[6],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[7],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[8],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[9],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[10],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[11],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[12],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[13],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[14],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
                Tab(
                  child: Text(
                    titles[15],
                    maxLines: 2,
                    textAlign: TextAlign.center,
                  ),
                ),
              ],
            ),
          ),
          body: TabBarView(
            controller: tabController,
            children: <Widget>[
              sales_cash_book(),
              purchase_cash_book(),
              bank_balance(),
              sales(),
              purchases(),
              stock(),
              monthly_business_expense(),
              monthly_other_income(),
              monthly_personal_expense(),
              existing_loans(),
              regular_investment(),
              product_sale_price(),
              product_purchase_price(),
              manufacturing_option_1(),
              manufacturing_option_2(),
              qualitative_aspects(),
            ],
          ),
          bottomNavigationBar:
              BlocConsumer<SalesCashBookCubit, SalesCashBookState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is SalesCashBookInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is SalesCashBookLoadingState) {
                return Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.all(15.0),
                          child: Container(
                              width: double.infinity,
                              height: 45,
                              child: ElevatedButton.icon(
                                icon: Icon(Icons.arrow_back_ios,
                                    size: 15, color: ColorResources.WHITE),
                                onPressed: () {
                                  if (tabController.index > 0) {
                                    tabController
                                        .animateTo(tabController.index - 1);
                                  }
                                },
                                label: Text(
                                  'Previous',
                                  style: Styles.buttonTextStyle,
                                ),
                                style: ElevatedButton.styleFrom(
                                  elevation: 0,
                                  backgroundColor:
                                      ColorResources.APP_THEME_COLOR,
                                  minimumSize: const Size.fromHeight(50), // NEW
                                ),
                              )),
                        ),
                      ),
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.all(15.0),
                          child: Container(
                            width: double.infinity,
                            height: 45,
                            child: ElevatedButton(
                              onPressed: () {
                                if (widget.arguments.isEditable) {
                                  if (tabController.index == 0 &&
                                      salesCashBookCubit.hasSalesCashBookInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 1 &&
                                      salesCashBookCubit
                                          .hasPurchaseCashBookInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 2 &&
                                      salesCashBookCubit.hasBankBalanceInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 3 &&
                                      salesCashBookCubit.hasSalesInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 4 &&
                                      salesCashBookCubit.hasPurchaseInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 5 &&
                                      salesCashBookCubit.hasStockInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 6 &&
                                      salesCashBookCubit
                                          .hasBusinessExpenseInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 7 &&
                                      salesCashBookCubit.hasOtherIncomeInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 8 &&
                                      salesCashBookCubit
                                          .hasPersonalExpenseInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 9 &&
                                      salesCashBookCubit.hasExistingLoanInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 10 &&
                                      salesCashBookCubit
                                          .hasRegularInvestmentInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 11 &&
                                      salesCashBookCubit
                                          .hasProductSalePriceInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 12 &&
                                      salesCashBookCubit
                                          .hasProductPurchasePriceInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 13 &&
                                      salesCashBookCubit
                                          .hasManufacturingOneInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 14 &&
                                      salesCashBookCubit
                                          .hasManufacturingTwoInfo) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 15 &&
                                      salesCashBookCubit
                                          .hasQualitativeAspectsInfo) {
                                    //tabController.animateTo(tabController.index + 1);
                                    Navigator.pushNamed(
                                        context, OutputSheet.routeName,
                                        arguments: CustomerDetailsArguments(
                                          widget.arguments.memberID,
                                          widget.arguments.customerID,
                                          true,
                                          '',
                                        ));
                                  } else {
                                    CommonMethods.showLoaderDialog(context);
                                    setCustomerInformation(
                                        widget.arguments.customerID);
                                  }
                                } else {
                                  showDialog(
                                    context: context,
                                    builder: (BuildContext context) {
                                      return AlertDialog(
                                        content: Container(
                                          height: 100,
                                          child: Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            children: [
                                              CircularProgressIndicator(),
                                              SizedBox(height: 10),
                                              Text('Loading...'),
                                            ],
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                  setCustomerInformation(
                                      widget.arguments.customerID);
                                }
                              },
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(
                                    'Next',
                                    style: Styles.buttonTextStyle,
                                  ),
                                  SizedBox(
                                    width: 15,
                                  ),
                                  Icon(Icons.arrow_forward_ios_outlined,
                                      size: 15, color: ColorResources.WHITE),
                                ],
                              ),
                              style: ElevatedButton.styleFrom(
                                elevation: 0,
                                backgroundColor: ColorResources.APP_THEME_COLOR,
                                minimumSize: const Size.fromHeight(50), // NEW
                              ),
                              // NEW
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                );
              } else if (state is SalesCashBookLoadedState) {
                return Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.all(15.0),
                          child: Container(
                              width: double.infinity,
                              height: 45,
                              child: ElevatedButton.icon(
                                icon: Icon(Icons.arrow_back_ios,
                                    size: 15, color: ColorResources.WHITE),
                                onPressed: () {
                                  if (tabController.index > 0) {
                                    tabController
                                        .animateTo(tabController.index - 1);
                                  }
                                },
                                label: Text(
                                  'Previous',
                                  style: Styles.buttonTextStyle,
                                ),
                                style: ElevatedButton.styleFrom(
                                  elevation: 0,
                                  backgroundColor:
                                      ColorResources.APP_THEME_COLOR,
                                  minimumSize: const Size.fromHeight(50), // NEW
                                ),
                              )),
                        ),
                      ),
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.all(15.0),
                          child: Container(
                            width: double.infinity,
                            height: 45,
                            child: ElevatedButton(
                              onPressed: () {
                                if (widget.arguments.isEditable) {
                                  if (tabController.index == 0 &&
                                      salesCashBookCubit.hasSalesCashBookInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 1 &&
                                      salesCashBookCubit
                                              .hasPurchaseCashBookInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 2 &&
                                      salesCashBookCubit.hasBankBalanceInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 3 &&
                                      salesCashBookCubit.hasSalesInfo == true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 4 &&
                                      salesCashBookCubit.hasPurchaseInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 5 &&
                                      salesCashBookCubit.hasStockInfo == true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 6 &&
                                      salesCashBookCubit
                                              .hasBusinessExpenseInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 7 &&
                                      salesCashBookCubit.hasOtherIncomeInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 8 &&
                                      salesCashBookCubit
                                              .hasPersonalExpenseInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 9 &&
                                      salesCashBookCubit.hasExistingLoanInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 10 &&
                                      salesCashBookCubit
                                              .hasRegularInvestmentInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 11 &&
                                      salesCashBookCubit
                                              .hasProductSalePriceInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 12 &&
                                      salesCashBookCubit
                                              .hasProductPurchasePriceInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 13 &&
                                      salesCashBookCubit
                                              .hasManufacturingOneInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 14 &&
                                      salesCashBookCubit
                                              .hasManufacturingTwoInfo ==
                                          true) {
                                    tabController
                                        .animateTo(tabController.index + 1);
                                  } else if (tabController.index == 15 &&
                                      salesCashBookCubit
                                              .hasQualitativeAspectsInfo ==
                                          true) {
                                    //tabController.animateTo(tabController.index + 1);
                                    CommonMethods.showLoaderDialog(context);
                                    setCustomerInformation(
                                        widget.arguments.customerID);
                                  } else {
                                    CommonMethods.showLoaderDialog(context);
                                    setCustomerInformation(
                                        widget.arguments.customerID);
                                  }
                                } else {
                                  showDialog(
                                    context: context,
                                    builder: (BuildContext context) {
                                      return AlertDialog(
                                        content: Container(
                                          height: 100,
                                          child: Column(
                                            mainAxisAlignment:
                                                MainAxisAlignment.center,
                                            children: [
                                              CircularProgressIndicator(),
                                              SizedBox(height: 10),
                                              Text('Loading...'),
                                            ],
                                          ),
                                        ),
                                      );
                                    },
                                  );
                                  setCustomerInformation(
                                      widget.arguments.customerID);
                                }
                              },
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(
                                    'Next',
                                    style: Styles.buttonTextStyle,
                                  ),
                                  SizedBox(
                                    width: 15,
                                  ),
                                  Icon(Icons.arrow_forward_ios_outlined,
                                      size: 15, color: ColorResources.WHITE),
                                ],
                              ),
                              style: ElevatedButton.styleFrom(
                                elevation: 0,
                                backgroundColor: ColorResources.APP_THEME_COLOR,
                                minimumSize: const Size.fromHeight(50), // NEW
                              ),
                              // NEW
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )),
    );
  }

  @override
  void initState() {
    tabController = TabController(length: titles.length, vsync: this);
    repository = BuroRepository();
    // Sales Cash Book
    //last month
    salesMemolastMonthFifth = TextEditingController();
    salesMemolastMonthTenth = TextEditingController();
    salesMemolastMonthFifteen = TextEditingController();
    salesMemolastMonthTwenty = TextEditingController();
    salesMemolastMonthTwentyFive = TextEditingController();
    salesMemolastMonthThirty = TextEditingController();
    salesMemotwoMonthBackFifth = TextEditingController();
    salesMemotwoMonthBackTenth = TextEditingController();
    salesMemotwoMonthBackFifteen = TextEditingController();
    salesMemotwoMonthBackTwenty = TextEditingController();
    salesMemotwoMonthBackTwentyFive = TextEditingController();
    salesMemotwoMonthBackThirty = TextEditingController();
    salesMemothreeMonthBackFifth = TextEditingController();
    salesMemothreeMonthBackTenth = TextEditingController();
    salesMemothreeMonthBackFifteen = TextEditingController();
    salesMemothreeMonthBackTwenty = TextEditingController();
    salesMemothreeMonthBackTwentyFive = TextEditingController();
    salesMemothreeMonthBackThirty = TextEditingController();
    purchaselastMonthFifth = TextEditingController();
    purchaselastMonthFifteen = TextEditingController();
    purchaselastMonthTwentyFive = TextEditingController();
    purchasetwoMonthBackFifth = TextEditingController();
    purchasetwoMonthBackFifteen = TextEditingController();
    purchasetwoMonthBackTwentyFive = TextEditingController();
    purchasethreeMonthBackFifth = TextEditingController();
    purchasethreeMonthBackFifteen = TextEditingController();
    purchasethreeMonthBackTwentyFive = TextEditingController();
    banklastMonthFifth = TextEditingController();
    banklastMonthFifteen = TextEditingController();
    banklastMonthTwentyFive = TextEditingController();
    banktwoMonthBackFifth = TextEditingController();
    banktwoMonthBackFifteen = TextEditingController();
    banktwoMonthBackTwentyFive = TextEditingController();
    bankthreeMonthBackFifth = TextEditingController();
    bankthreeMonthBackFifteen = TextEditingController();
    bankthreeMonthBackTwentyFive = TextEditingController();
    bankfourMonthFifth = TextEditingController();
    bankfourMonthFifteen = TextEditingController();
    bankfourMonthTwentyFive = TextEditingController();
    bankfiveMonthBackFifth = TextEditingController();
    bankfiveMonthBackFifteen = TextEditingController();
    bankfiveMonthBackTwentyFive = TextEditingController();
    banksixMonthBackFifth = TextEditingController();
    banksixMonthBackFifteen = TextEditingController();
    banksixMonthBackTwentyFive = TextEditingController();

    banklastMonthFifteen = TextEditingController();
    banklastMonthTwentyFive = TextEditingController();
    banktwoMonthBackFifth = TextEditingController();
    banktwoMonthBackFifteen = TextEditingController();
    banktwoMonthBackTwentyFive = TextEditingController();
    bankthreeMonthBackFifth = TextEditingController();
    bankthreeMonthBackFifteen = TextEditingController();
    bankthreeMonthBackTwentyFive = TextEditingController();
    bankfourMonthFifth = TextEditingController();
    bankfourMonthFifteen = TextEditingController();
    bankfourMonthTwentyFive = TextEditingController();
    bankfiveMonthBackFifth = TextEditingController();
    bankfiveMonthBackFifteen = TextEditingController();
    bankfiveMonthBackTwentyFive = TextEditingController();
    banksixMonthBackFifth = TextEditingController();
    banksixMonthBackFifteen = TextEditingController();
    banksixMonthBackTwentyFive = TextEditingController();

    salesClosedInWeek = TextEditingController();
    salesNoOfDaysWorkingInMonth = TextEditingController();

    salesDaily = TextEditingController();
    salesWeekly = TextEditingController();
    salesMonthly = TextEditingController();
    salesMonthlyPrevious = TextEditingController();

    salesLowMonthCount = TextEditingController();
    salesLowAmount = TextEditingController();
    salesHighMonthCount = TextEditingController();
    salesHighAmount = TextEditingController();
    salesNormalMonthCount = TextEditingController();
    salesNormalAmount = TextEditingController();

    salesDebtors = TextEditingController();
    salesDebtorsPreviousLoan = TextEditingController();
    salesGrowthPostFunding = TextEditingController();

    purchaseDaily = TextEditingController();
    purchaseWeekly = TextEditingController();
    purchaseMonthly = TextEditingController();
    purchaseCreditors = TextEditingController();
    purchaseMonthlyPreviousLoan = TextEditingController();
    purchaseCreditorsPreviousLoan = TextEditingController();

    stockFinishedGood = TextEditingController();
    stockFinishedGoodPreviousLoan = TextEditingController();
    stockRawMaterial = TextEditingController();
    stockRawMaterialPreviousLoan = TextEditingController();

    agricultureIncome = TextEditingController();
    rentalIncome = TextEditingController();
    familyMemberSalaryIncome = TextEditingController();
    alliedAgriIncome = TextEditingController();
    otherIncome = TextEditingController();

    agricultureIncomePreviousLoan = TextEditingController();
    rentalIncomePreviousLoan = TextEditingController();
    familyMemberSalaryIncomePreviousLoan = TextEditingController();
    alliedAgriIncomePreviousLoan = TextEditingController();
    otherIncomPreviousLoan = TextEditingController();

    businessFactoryRent = TextEditingController();
    businessElectricity = TextEditingController();
    businessStaffSalary = TextEditingController();
    businessMobileInternet = TextEditingController();
    businessTransportCost = TextEditingController();
    businessGasNWater = TextEditingController();
    businessRepairNMaintenance = TextEditingController();
    businessDieselForGenerator = TextEditingController();
    businessMarketing = TextEditingController();
    businessLabourExpense = TextEditingController();
    businessBillNSecurity = TextEditingController();
    businessTax = TextEditingController();
    businessEntertainment = TextEditingController();
    businessOtherBusinessExpense = TextEditingController();

    businessFactoryRentPreviousLoan = TextEditingController();
    businessElectricityPreviousLoan = TextEditingController();
    businessStaffSalaryPreviousLoan = TextEditingController();
    businessMobileInternetPreviousLoan = TextEditingController();
    businessTransportCostPreviousLoan = TextEditingController();
    businessGasNWaterPreviousLoan = TextEditingController();
    businessRepairNMaintenancePreviousLoan = TextEditingController();
    businessDieselForGeneratorPreviousLoan = TextEditingController();
    businessMarketingPreviousLoan = TextEditingController();
    businessLabourExpensePreviousLoan = TextEditingController();
    businessBillNSecurityPreviousLoan = TextEditingController();
    businessTaxPreviousLoan = TextEditingController();
    businessEntertainmentPreviousLoan = TextEditingController();
    businessOtherBusinessExpensePreviousLoan = TextEditingController();

    //personal Expense Monthly

    personalExpenseHouseRent = TextEditingController();
    personalExpenseFood = TextEditingController();
    personalExpenseCloth = TextEditingController();
    personalExpenseEducation = TextEditingController();
    personalExpenseElectricity = TextEditingController();
    personalExpenseTransport = TextEditingController();
    personalExpenseMobileInternet = TextEditingController();
    personalExpenseMedical = TextEditingController();
    personalExpenseEntertainment = TextEditingController();
    personalExpenseRepairNMaintenance = TextEditingController();
    personalExpenseMaid = TextEditingController();
    personalExpenseHouseTax = TextEditingController();
    personalExpenseOtherExpense = TextEditingController();

    personalExpenseHouseRentPrevious = TextEditingController();
    personalExpenseFoodPrevious = TextEditingController();
    personalExpenseClothPrevious = TextEditingController();
    personalExpenseEducationPrevious = TextEditingController();
    personalExpenseElectricityPrevious = TextEditingController();
    personalExpenseTransportPrevious = TextEditingController();
    personalExpenseMobileInternetPrevious = TextEditingController();
    personalExpenseMedicalPrevious = TextEditingController();
    personalExpenseEntertainmentPrevious = TextEditingController();
    personalExpenseRepairNMaintenancePrevious = TextEditingController();
    personalExpenseMaidPrevious = TextEditingController();
    personalExpenseHouseTaxPrevious = TextEditingController();
    personalExpenseOtherExpensePrevious = TextEditingController();

    investmentLifeInsurance = TextEditingController();
    investmentGeneralInsurance = TextEditingController();
    investmentDPS = TextEditingController();
    investmentGrossMargin = TextEditingController();
    investmentMonthlyCashInhand = TextEditingController();
    investmentLifeInsurancePreviousLoan = TextEditingController();
    investmentGeneralInsurancePreviousLoan = TextEditingController();
    investmentDPSPreviousLoan = TextEditingController();
    investmentGrossMarginPreviousLoan = TextEditingController();
    investmentMonthlyCashInhandPreviousLoan = TextEditingController();

    promoter = TextEditingController();
    businessActivity = TextEditingController();
    marketNDemand = TextEditingController();
    recommendation = TextEditingController();

    existLoanNameOfInstitute = TextEditingController();
    existLoanAmount = TextEditingController();
    existLoanEmi = TextEditingController();
    existLoanOutstanding = TextEditingController();
    existLoanTenor = TextEditingController();
    existLoanpaidTenor = TextEditingController();
    existLoanBalanceTenor = TextEditingController();
    existloanToBeClosed = TextEditingController();
    existLoanobligate = TextEditingController();
    existLoanpreviousObligate = TextEditingController();

    manufacturingTypeOfProduct = TextEditingController();
    manufacturingNumberOfUnits = TextEditingController();
    manufacturingAverageSalePrize = TextEditingController();
    manufacturingProductionCost = TextEditingController();

    materialCost = TextEditingController();
    otherCashCost = TextEditingController();
    averageSaleVolume = TextEditingController();
    debtBurdenManufacturing = TextEditingController();
    debtBurdenPreviousLoan = TextEditingController();

    productSaleTypeController = TextEditingController();
    productSalePriceController = TextEditingController();
    productSaleUnitsController = TextEditingController();

    productPurchaseTypeController = TextEditingController();
    productPurchasePriceController = TextEditingController();
    productPurchaseUnitsController = TextEditingController();
    memberNumberController = TextEditingController();
    customerNameController = TextEditingController();
    customerStatusController = TextEditingController();
    customerStatusPreviousLoanController = TextEditingController();

    averageSalesCashbookPrevious = TextEditingController();
    averagePurchaseCashbookPrevious = TextEditingController();
    averagebBankBalancePrevious = TextEditingController();

    salesCashBookCubit = context.read<SalesCashBookCubit>();
    purchaseCashBookCubit = context.read<PurchaseCashBookCubit>();
    bankBalanceCubit = context.read<BankBalanceCubit>();
    salesCubit = context.read<SalesCubit>();
    purchasesCubit = context.read<PurchasesCubit>();
    stockCubit = context.read<StockCubit>();
    businessExpenseMonthlyCubit = context.read<BusinessExpenseMonthlyCubit>();
    otherIncomeMonthlyCubit = context.read<OtherIncomeMonthlyCubit>();
    personalExpenseMonthlyCubit = context.read<PersonalExpenseMonthlyCubit>();
    regularInvestmentCubit = context.read<RegularInvestmentCubit>();
    qualitativeAspectsCubit = context.read<QualitativeAspectsCubit>();
    blocProductSale = context.read<ProductSalePriceCubit>();
    blocProductPurchase = context.read<ProductPurchasePrizeCubit>();
    existingLoansCubit = context.read<ExistingLoansCubit>();
    manufecturingOptionOneCubit = context.read<ManufecturingOptionOneCubit>();
    manufacturingOptionTwoCubit = context.read<ManufacturingOptionTwoCubit>();

    print('Widhet  ${widget.arguments.isEditable}');

    if (widget.arguments.isEditable) {
      try {
        salesCashBookCubit
            .getSalesCashBook(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasSalesCashBookInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        purchaseCashBookCubit
            .getPurchaseCashBook(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasPurchaseCashBookInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        bankBalanceCubit
            .getBankBalance(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasBankBalanceInfo = value!.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        salesCubit.getSales(widget.arguments.customerID).then(
            (value) => {salesCashBookCubit.hasSalesInfo = value.success!});
      } catch (e) {
        print(e);
      }

      try {
        purchasesCubit
            .getPurchaseDetails(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasPurchaseInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        stockCubit
            .getStockDetails(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasStockInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        businessExpenseMonthlyCubit
            .getBusinessExpenseMonthly(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasBusinessExpenseInfo = value!.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        otherIncomeMonthlyCubit
            .getOtherIncomeMonthly(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasOtherIncomeInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        personalExpenseMonthlyCubit
            .getPersonalExpenseDetails(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasPersonalExpenseInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        existingLoansCubit
            .getExistingLoan(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasExistingLoanInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        regularInvestmentCubit
            .getRegularInvestment(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasRegularInvestmentInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        blocProductSale
            .getProductSalePrice(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasProductSalePriceInfo = value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        blocProductPurchase
            .getProductPurchasePrice(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasProductPurchasePriceInfo =
                      value.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        manufecturingOptionOneCubit
            .getManufacturingOptionOne(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasManufacturingOneInfo = value!.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        manufacturingOptionTwoCubit
            .getManufacturingOptionTwo(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasManufacturingTwoInfo = value!.success!,
                });
      } catch (e) {
        print(e);
      }
      try {
        qualitativeAspectsCubit
            .getQualitativeAspects(widget.arguments.customerID)
            .then((value) => {
                  salesCashBookCubit.hasQualitativeAspectsInfo =
                      value!.success!,
                });
      } catch (e) {
        print(e);
      }
    }
    super.initState();
  }

  @override
  void didChangeDependencies() {
    // TODO: implement didChangeDependencies
    super.didChangeDependencies();
  }

  @override
  void deactivate() {
    blocProductSale.close();
    blocProductPurchase.close();
    existingLoansCubit.close();
    manufecturingOptionOneCubit.close();
    manufacturingOptionTwoCubit.close();
    salesCashBookCubit.close();
    purchaseCashBookCubit.close();
    bankBalanceCubit.close();
    salesCubit.close();
    purchasesCubit.close();
    stockCubit.close();
    businessExpenseMonthlyCubit.close();
    otherIncomeMonthlyCubit.close();
    personalExpenseMonthlyCubit.close();
    regularInvestmentCubit.close();
    qualitativeAspectsCubit.close();
    existingLoansCubit.loanList.clear();
    blocProductPurchase.close();
    blocProductSale.close();
    blocProductPurchase.purchaseList.clear();
    blocProductSale.productList.clear();

    super.deactivate();
  }

  @override
  void dispose() {
    // Dispose the animation controller when the widget is disposed
    productSaleTypeController.dispose();
    productSalePriceController.dispose();
    productSaleUnitsController.dispose();
    productPurchaseTypeController.dispose();
    productPurchasePriceController.dispose();
    productPurchaseUnitsController.dispose();
    customerStatusController.dispose();
    customerStatusPreviousLoanController.dispose();
    customerNameController.dispose();
    tabController.dispose();

    salesMemolastMonthFifth.dispose();
    salesMemolastMonthTenth.dispose();
    salesMemolastMonthFifteen.dispose();
    salesMemolastMonthTwenty.dispose();
    salesMemolastMonthTwentyFive.dispose();
    salesMemolastMonthThirty.dispose();
    salesMemotwoMonthBackFifth.dispose();
    salesMemotwoMonthBackTenth.dispose();
    salesMemotwoMonthBackFifteen.dispose();
    salesMemotwoMonthBackTwenty.dispose();
    salesMemotwoMonthBackTwentyFive.dispose();
    salesMemotwoMonthBackThirty.dispose();
    salesMemothreeMonthBackFifth.dispose();
    salesMemothreeMonthBackTenth.dispose();
    salesMemothreeMonthBackFifteen.dispose();
    salesMemothreeMonthBackTwenty.dispose();
    salesMemothreeMonthBackTwentyFive.dispose();
    salesMemothreeMonthBackThirty.dispose();
    purchaselastMonthFifth.dispose();
    purchaselastMonthFifteen.dispose();
    purchaselastMonthTwentyFive.dispose();
    purchasetwoMonthBackFifth.dispose();
    purchasetwoMonthBackFifteen.dispose();
    purchasetwoMonthBackTwentyFive.dispose();
    purchasethreeMonthBackFifth.dispose();
    purchasethreeMonthBackFifteen.dispose();
    purchasethreeMonthBackTwentyFive.dispose();
    banklastMonthFifth.dispose();
    banklastMonthFifteen.dispose();
    banklastMonthTwentyFive.dispose();
    banktwoMonthBackFifth.dispose();
    banktwoMonthBackFifteen.dispose();
    banktwoMonthBackTwentyFive.dispose();
    bankthreeMonthBackFifth.dispose();
    bankthreeMonthBackFifteen.dispose();
    bankthreeMonthBackTwentyFive.dispose();
    bankfourMonthFifth.dispose();
    bankfourMonthFifteen.dispose();
    bankfourMonthTwentyFive.dispose();
    bankfiveMonthBackFifth.dispose();
    bankfiveMonthBackFifteen.dispose();
    bankfiveMonthBackTwentyFive.dispose();
    banksixMonthBackFifth.dispose();
    banksixMonthBackFifteen.dispose();
    banksixMonthBackTwentyFive.dispose();
    banklastMonthFifteen.dispose();
    banklastMonthTwentyFive.dispose();
    banktwoMonthBackFifth.dispose();
    banktwoMonthBackFifteen.dispose();
    banktwoMonthBackTwentyFive.dispose();
    bankthreeMonthBackFifth.dispose();
    bankthreeMonthBackFifteen.dispose();
    bankthreeMonthBackTwentyFive.dispose();
    bankfourMonthFifth.dispose();
    bankfourMonthFifteen.dispose();
    bankfourMonthTwentyFive.dispose();
    bankfiveMonthBackFifth.dispose();
    bankfiveMonthBackFifteen.dispose();
    bankfiveMonthBackTwentyFive.dispose();
    banksixMonthBackFifth.dispose();
    banksixMonthBackFifteen.dispose();
    banksixMonthBackTwentyFive.dispose();
    salesClosedInWeek.dispose();
    salesNoOfDaysWorkingInMonth.dispose();
    salesDaily.dispose();
    salesWeekly.dispose();
    salesMonthly.dispose();
    salesMonthlyPrevious.dispose();
    salesLowMonthCount.dispose();
    salesLowAmount.dispose();
    salesHighMonthCount.dispose();
    salesHighAmount.dispose();
    salesNormalMonthCount.dispose();
    salesNormalAmount.dispose();
    salesDebtors.dispose();
    salesDebtorsPreviousLoan.dispose();
    salesGrowthPostFunding.dispose();
    purchaseDaily.dispose();
    purchaseWeekly.dispose();
    purchaseMonthly.dispose();
    purchaseCreditors.dispose();
    purchaseMonthlyPreviousLoan.dispose();
    purchaseCreditorsPreviousLoan.dispose();
    stockFinishedGood.dispose();
    stockFinishedGoodPreviousLoan.dispose();
    stockRawMaterial.dispose();
    stockRawMaterialPreviousLoan.dispose();
    agricultureIncome.dispose();
    rentalIncome.dispose();
    familyMemberSalaryIncome.dispose();
    alliedAgriIncome.dispose();
    otherIncome.dispose();
    agricultureIncomePreviousLoan.dispose();
    rentalIncomePreviousLoan.dispose();
    familyMemberSalaryIncomePreviousLoan.dispose();
    alliedAgriIncomePreviousLoan.dispose();
    otherIncomPreviousLoan.dispose();

    businessFactoryRent.dispose();
    businessElectricity.dispose();
    businessStaffSalary.dispose();
    businessMobileInternet.dispose();
    businessTransportCost.dispose();
    businessGasNWater.dispose();
    businessRepairNMaintenance.dispose();
    businessDieselForGenerator.dispose();
    businessMarketing.dispose();
    businessLabourExpense.dispose();
    businessBillNSecurity.dispose();
    businessTax.dispose();
    businessEntertainment.dispose();
    businessOtherBusinessExpense.dispose();
    businessFactoryRentPreviousLoan.dispose();
    businessElectricityPreviousLoan.dispose();
    businessStaffSalaryPreviousLoan.dispose();
    businessMobileInternetPreviousLoan.dispose();
    businessTransportCostPreviousLoan.dispose();
    businessGasNWaterPreviousLoan.dispose();
    businessRepairNMaintenancePreviousLoan.dispose();
    businessDieselForGeneratorPreviousLoan.dispose();
    businessMarketingPreviousLoan.dispose();
    businessLabourExpensePreviousLoan.dispose();
    businessBillNSecurityPreviousLoan.dispose();
    businessTaxPreviousLoan.dispose();
    businessEntertainmentPreviousLoan.dispose();
    businessOtherBusinessExpensePreviousLoan.dispose();
    //personal Expense Monthly
    personalExpenseHouseRent.dispose();
    personalExpenseFood.dispose();
    personalExpenseCloth.dispose();
    personalExpenseEducation.dispose();
    personalExpenseElectricity.dispose();
    personalExpenseTransport.dispose();
    personalExpenseMobileInternet.dispose();
    personalExpenseMedical.dispose();
    personalExpenseEntertainment.dispose();
    personalExpenseRepairNMaintenance.dispose();
    personalExpenseMaid.dispose();
    personalExpenseHouseTax.dispose();
    personalExpenseOtherExpense.dispose();
    personalExpenseHouseRentPrevious.dispose();
    personalExpenseFoodPrevious.dispose();
    personalExpenseClothPrevious.dispose();
    personalExpenseEducationPrevious.dispose();
    personalExpenseElectricityPrevious.dispose();
    personalExpenseTransportPrevious.dispose();
    personalExpenseMobileInternetPrevious.dispose();
    personalExpenseMedicalPrevious.dispose();
    personalExpenseEntertainmentPrevious.dispose();
    personalExpenseRepairNMaintenancePrevious.dispose();
    personalExpenseMaidPrevious.dispose();
    personalExpenseHouseTaxPrevious.dispose();
    personalExpenseOtherExpensePrevious.dispose();
    investmentLifeInsurance.dispose();
    investmentGeneralInsurance.dispose();
    investmentDPS.dispose();
    investmentGrossMargin.dispose();
    investmentMonthlyCashInhand.dispose();
    investmentLifeInsurancePreviousLoan.dispose();
    investmentGeneralInsurancePreviousLoan.dispose();
    investmentDPSPreviousLoan.dispose();
    investmentGrossMarginPreviousLoan.dispose();
    investmentMonthlyCashInhandPreviousLoan.dispose();

    promoter.dispose();
    businessActivity.dispose();
    marketNDemand.dispose();
    recommendation.dispose();

    existLoanNameOfInstitute.dispose();
    existLoanAmount.dispose();
    existLoanEmi.dispose();
    existLoanOutstanding.dispose();
    existLoanTenor.dispose();
    existLoanpaidTenor.dispose();
    existLoanBalanceTenor.dispose();
    existloanToBeClosed.dispose();
    existLoanobligate.dispose();
    existLoanpreviousObligate.dispose();

    manufacturingTypeOfProduct.dispose();
    manufacturingNumberOfUnits.dispose();
    manufacturingAverageSalePrize.dispose();
    manufacturingProductionCost.dispose();

    materialCost.dispose();
    otherCashCost.dispose();
    averageSaleVolume.dispose();
    debtBurdenManufacturing.dispose();
    debtBurdenPreviousLoan.dispose();

    productSaleTypeController.dispose();
    productSalePriceController.dispose();
    productSaleUnitsController.dispose();

    productPurchaseTypeController.dispose();
    productPurchasePriceController.dispose();
    productPurchaseUnitsController.dispose();
    memberNumberController.dispose();
    customerNameController.dispose();
    customerStatusController.dispose();
    customerStatusPreviousLoanController.dispose();

    averageSalesCashbookPrevious.dispose();
    averagePurchaseCashbookPrevious.dispose();
    averagebBankBalancePrevious.dispose();

    super.dispose();
  }

  Future<bool> _willPopCallback() async {
    Navigator.pushNamed(context, CashFlowMain.routeName,
        arguments: widget.arguments);
    return true;
  }

  Widget sales_cash_book() {
    return widget.arguments.isEditable
        ? BlocConsumer<SalesCashBookCubit, SalesCashBookState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is SalesCashBookInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is SalesCashBookLoadingState) {
                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                      child: Column(
                        children: [
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Last Month Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text(
                                        '5th  ',
                                        style: GoogleFonts.inter(
                                            fontSize: 14,
                                            fontWeight: FontWeight.w400,
                                            fontStyle: FontStyle.normal,
                                            color: ColorResources.GREY_NINETY),
                                      ),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthTenth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthFifteen,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemolastMonthTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemolastMonthTwentyFive,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemolastMonthThirty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Two Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackFifth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackTenth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemotwoMonthBackFifteen,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            salesMemotwoMonthBackTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller: salesMemotwoMonthBackThirty,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Three Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            salesMemothreeMonthBackTenth,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        controller:
                                            salesMemothreeMonthBackFifteen,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            salesMemothreeMonthBackTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackTwentyFive,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackThirty,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is SalesCashBookLoadedState) {
                if (state.data.isNotEmpty) {
                  salesMemolastMonthFifth.text =
                      state.data[0].firstmontH5TH.toString();
                  salesMemolastMonthTenth.text =
                      state.data[0].firstmontH10TH.toString();
                  salesMemolastMonthFifteen.text =
                      state.data[0].firstmontH15TH.toString();
                  salesMemolastMonthTwenty.text =
                      state.data[0].firstmontH20TH.toString();
                  salesMemolastMonthTwentyFive.text =
                      state.data[0].firstmontH25TH.toString();
                  salesMemolastMonthThirty.text =
                      state.data[0].firstmontH30TH.toString();
                  salesMemotwoMonthBackFifth.text =
                      state.data[0].twomontH5TH.toString();
                  salesMemotwoMonthBackTenth.text =
                      state.data[0].twomontH10TH.toString();
                  salesMemotwoMonthBackFifteen.text =
                      state.data[0].twomontH15TH.toString();
                  salesMemotwoMonthBackTwenty.text =
                      state.data[0].twomontH20TH.toString();
                  salesMemotwoMonthBackTwentyFive.text =
                      state.data[0].twomontH25TH.toString();
                  salesMemotwoMonthBackThirty.text =
                      state.data[0].twomontH30TH.toString();
                  salesMemothreeMonthBackFifth.text =
                      state.data[0].threemontH5TH.toString();
                  salesMemothreeMonthBackTenth.text =
                      state.data[0].threemontH10TH.toString();
                  salesMemothreeMonthBackFifteen.text =
                      state.data[0].threemontH15TH.toString();
                  salesMemothreeMonthBackTwenty.text =
                      state.data[0].threemontH20TH.toString();
                  salesMemothreeMonthBackTwentyFive.text =
                      state.data[0].threemontH25TH.toString();
                  salesMemothreeMonthBackThirty.text =
                      state.data[0].threemontH30TH.toString();
                }

                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                      child: Column(
                        children: [
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Last Month Daily ',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthTenth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: salesMemolastMonthFifteen,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemolastMonthTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemolastMonthTwentyFive,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemolastMonthThirty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Two Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackFifth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackTenth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemotwoMonthBackFifteen,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: salesMemotwoMonthBackTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            salesMemotwoMonthBackTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller: salesMemotwoMonthBackThirty,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Three Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('10th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            salesMemothreeMonthBackTenth,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        controller:
                                            salesMemothreeMonthBackFifteen,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('20th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            salesMemothreeMonthBackTwenty,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackTwentyFive,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('30th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller:
                                            salesMemothreeMonthBackThirty,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Container(
              child: Center(
                child: Column(
                  children: [
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Last Month Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemolastMonthFifth,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('10th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemolastMonthTenth,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemolastMonthFifteen,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('20th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemolastMonthTwenty,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemolastMonthTwentyFive,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('30th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemolastMonthThirty,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Two Months Back - Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemotwoMonthBackFifth,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('10th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemotwoMonthBackTenth,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemotwoMonthBackFifteen,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('20th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemotwoMonthBackTwenty,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemotwoMonthBackTwentyFive,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('30th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: salesMemotwoMonthBackThirty,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Three Months Back - Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemothreeMonthBackFifth,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('10th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: salesMemothreeMonthBackTenth,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  controller: salesMemothreeMonthBackFifteen,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('20th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: salesMemothreeMonthBackTwenty,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemothreeMonthBackTwentyFive,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('30th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: salesMemothreeMonthBackThirty,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget purchase_cash_book() {
    return widget.arguments.isEditable
        ? BlocConsumer<PurchaseCashBookCubit, PurchaseCashBookState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is PurchaseCashBookInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is PurchaseCashBookLoadingState) {
                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                      child: Column(
                        children: [
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Last Month Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: purchaselastMonthFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchaselastMonthFifteen,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchaselastMonthTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Two Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        controller: purchasetwoMonthBackFifth,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchasetwoMonthBackFifteen,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            purchasetwoMonthBackTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Three Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchasethreeMonthBackFifth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            purchasethreeMonthBackFifteen,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            purchasethreeMonthBackTwentyFive,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is PurchaseCashBookLoadedState) {
                if (state.data.isNotEmpty) {
                  purchaselastMonthFifth.text =
                      state.data[0].firstmontH5TH.toString();
                  purchaselastMonthFifteen.text =
                      state.data[0].firstmontH15TH.toString();
                  purchaselastMonthTwentyFive.text =
                      state.data[0].firstmontH25TH.toString();

                  purchasetwoMonthBackFifth.text =
                      state.data[0].twomontH5TH.toString();
                  purchasetwoMonthBackFifteen.text =
                      state.data[0].twomontH15TH.toString();
                  purchasetwoMonthBackTwentyFive.text =
                      state.data[0].twomontH25TH.toString();

                  purchasethreeMonthBackFifth.text =
                      state.data[0].threemontH5TH.toString();
                  purchasethreeMonthBackFifteen.text =
                      state.data[0].threemontH15TH.toString();
                  purchasethreeMonthBackTwentyFive.text =
                      state.data[0].threemontH25TH.toString();
                }

                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                      child: Column(
                        children: [
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Last Month Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: purchaselastMonthFifth,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchaselastMonthFifteen,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchaselastMonthTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Two Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        controller: purchasetwoMonthBackFifth,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchasetwoMonthBackFifteen,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller:
                                            purchasetwoMonthBackTwentyFive,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          Center(
                              child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              'Three Months Back - Daily',
                              style: Styles.listHeaderTextStyle,
                            ),
                          )),
                          Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('5th  ',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: purchasethreeMonthBackFifth,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('15th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            purchasethreeMonthBackFifteen,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.all(15),
                                      child: Text('25th',
                                          style:
                                              Styles.cashFlowInputFormHeading),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(
                                                'Total Amount (TK.)'),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller:
                                            purchasethreeMonthBackTwentyFive,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Container(
              child: Center(
                child: Column(
                  children: [
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Last Month Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: purchaselastMonthFifth,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: purchaselastMonthFifteen,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: purchaselastMonthTwentyFive,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Two Months Back - Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  controller: purchasetwoMonthBackFifth,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: purchasetwoMonthBackFifteen,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: purchasetwoMonthBackTwentyFive,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                    Center(
                        child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Three Months Back - Daily',
                        style: Styles.listHeaderTextStyle,
                      ),
                    )),
                    Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('5th  ',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: purchasethreeMonthBackFifth,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('15th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: purchasethreeMonthBackFifteen,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.all(15),
                                child: Text('25th',
                                    style: Styles.cashFlowInputFormHeading),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: Styles.cashFormInputDecoration(
                                      'Total Amount (TK.)'),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: purchasethreeMonthBackTwentyFive,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget bank_balance() {
    return widget.arguments.isEditable
        ? BlocConsumer<BankBalanceCubit, BankBalanceState>(
            listener: (context, state) {
              if (state is BankBalanceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is BankBalanceInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is BankBalanceLoadingState) {
                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                        child: Column(
                      children: [
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Last Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (TK.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Two Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Three Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Four Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Five Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      controller: bankfiveMonthBackTwentyFive,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Six Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ],
                    )),
                  ),
                );
              } else if (state is BankBalanceLoadedState) {
                if (state.data.isNotEmpty) {
                  banklastMonthFifth.text =
                      state.data[0].firstmontH5TH.toString();
                  banklastMonthFifteen.text =
                      state.data[0].firstmontH15TH.toString();
                  banklastMonthTwentyFive.text =
                      state.data[0].firstmontH25TH.toString();
                  banktwoMonthBackFifth.text =
                      state.data[0].twomontH5TH.toString();
                  banktwoMonthBackFifteen.text =
                      state.data[0].twomontH15TH.toString();
                  banktwoMonthBackTwentyFive.text =
                      state.data[0].twomontH25TH.toString();
                  bankthreeMonthBackFifth.text =
                      state.data[0].threemontH5TH.toString();
                  bankthreeMonthBackFifteen.text =
                      state.data[0].threemontH15TH.toString();
                  bankthreeMonthBackTwentyFive.text =
                      state.data[0].threemontH25TH.toString();
                  bankfourMonthFifth.text =
                      state.data[0].fourtmontH5TH.toString();
                  bankfourMonthFifteen.text =
                      state.data[0].fourtmontH15TH.toString();
                  bankfourMonthTwentyFive.text =
                      state.data[0].fourtmontH25TH.toString();
                  bankfiveMonthBackFifth.text =
                      state.data[0].fivemontH5TH.toString();
                  bankfiveMonthBackFifteen.text =
                      state.data[0].fivemontH15TH.toString();
                  bankfiveMonthBackTwentyFive.text =
                      state.data[0].fivemontH25TH.toString();
                  banksixMonthBackFifth.text =
                      state.data[0].sixmontH5TH.toString();
                  banksixMonthBackFifteen.text =
                      state.data[0].sixmontH15TH.toString();
                  banksixMonthBackTwentyFive.text =
                      state.data[0].sixmontH25TH.toString();
                  averagebBankBalancePrevious.text =
                      state.data[0].averagebankbalancepreviousloan.toString();
                }

                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                        child: Column(
                      children: [
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Last Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (TK.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Two Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Three Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Four Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Five Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      controller: bankfiveMonthBackTwentyFive,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Six Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ],
                    )),
                  ),
                );
              } else if (state is BankBalanceErrorState) {
                return SingleChildScrollView(
                  child: Container(
                    child: Center(
                        child: Column(
                      children: [
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Last Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (TK.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banklastMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Two Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banktwoMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Three Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankthreeMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Four Month Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfourMonthTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Five Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: bankfiveMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      controller: bankfiveMonthBackTwentyFive,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                        Center(
                            child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            'Six Months Back - Daily',
                            style: Styles.listHeaderTextStyle,
                          ),
                        )),
                        Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('5th  ',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('15th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackFifteen,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Text('25th',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: banksixMonthBackTwentyFive,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ],
                    )),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Container(
              child: Center(
                  child: Column(
                children: [
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Last Month Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (TK.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banklastMonthFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banklastMonthFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banklastMonthTwentyFive,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Two Months Back - Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banktwoMonthBackFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banktwoMonthBackFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banktwoMonthBackTwentyFive,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Three Months Back - Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankthreeMonthBackFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankthreeMonthBackFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankthreeMonthBackTwentyFive,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Four Month Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankfourMonthFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankfourMonthFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankfourMonthTwentyFive,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Five Months Back - Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankfiveMonthBackFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: bankfiveMonthBackFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                controller: bankfiveMonthBackTwentyFive,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Center(
                      child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(
                      'Six Months Back - Daily',
                      style: Styles.listHeaderTextStyle,
                    ),
                  )),
                  Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('5th  ',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banksixMonthBackFifth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('15th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banksixMonthBackFifteen,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Text('25th',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: banksixMonthBackTwentyFive,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ],
              )),
            ),
          );
  }

  Widget sales() {
    return widget.arguments.isEditable
        ? BlocConsumer<SalesCubit, SalesState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is SalesInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is SalesLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 8, right: 8, top: 18),
                    child: Container(
                      child: Center(
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.all(5),
                                    child: Text(
                                        'No. of Days shop/factory is closed in a week',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        right: 10, top: 10, bottom: 10),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesClosedInWeek,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.all(5),
                                    child: Text('No. of Days working in month',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        right: 10, top: 10, bottom: 10),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesNoOfDaysWorkingInMonth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Daily (Tk)',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 10, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesDaily,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Weekly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesWeekly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Monthly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesMonthly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Center(
                                child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 10, right: 10, top: 15, bottom: 20),
                              child: Text(
                                'Sales Seasonality (Max 12 months)',
                                style: Styles.listHeaderTextStyle,
                              ),
                            )),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('Low',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Low Month Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesLowMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesLowAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('High',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'High Month count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesHighMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesHighAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('Normal',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Normal Month Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.multiline,
                                      controller: salesNormalMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesNormalAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Debtors',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesDebtors,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text(
                                            'Monthly Sales Growth Post Funding(%)',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Value(%)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesGrowthPostFunding,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                );
              } else if (state is SalesLoadedState) {
                if (state.data.isNotEmpty) {
                  salesClosedInWeek.text =
                      state.data[0].closingdayinweek.toString();
                  salesNoOfDaysWorkingInMonth.text =
                      state.data[0].workingdaysinmonth.toString();

                  salesDaily.text = state.data[0].salesdaily.toString();
                  salesWeekly.text = state.data[0].salesweekly.toString();
                  salesMonthly.text = state.data[0].salesmonthly.toString();
                  salesMonthlyPrevious.text =
                      state.data[0].monthpreviousloan.toString();

                  salesLowMonthCount.text = state.data[0].lowmonth.toString();
                  salesLowAmount.text = state.data[0].low.toString();
                  salesHighMonthCount.text = state.data[0].highmonth.toString();
                  salesHighAmount.text = state.data[0].high.toString();
                  salesNormalMonthCount.text =
                      state.data[0].normalmonth.toString();
                  salesNormalAmount.text = state.data[0].normal.toString();

                  salesDebtors.text = state.data[0].debtors.toString();
                  salesDebtorsPreviousLoan.text =
                      state.data[0].debtorspreviousloan.toString();
                  salesGrowthPostFunding.text =
                      state.data[0].monthlysalesgrowthpostfunding.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 8, right: 8, top: 12),
                    child: Container(
                      child: Center(
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.all(5),
                                    child: Text(
                                        'No. of Days shop/factory is closed in a week',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        right: 10, top: 10, bottom: 10),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesClosedInWeek,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.all(5),
                                    child: Text('No. of Days working in month',
                                        style: Styles.cashFlowInputFormHeading),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        right: 10, top: 10, bottom: 10),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesNoOfDaysWorkingInMonth,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Daily (Tk)',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 10, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesDaily,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Weekly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesWeekly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 150,
                                        child: Text('Sales Monthly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesMonthly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Center(
                                child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 10, right: 10, top: 15, bottom: 20),
                              child: Text(
                                'Sales Seasonality (Max 12 months)',
                                style: Styles.listHeaderTextStyle,
                              ),
                            )),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('Low',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Low Month Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesLowMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesLowAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('High',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'High Month count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesHighMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesHighAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 10, top: 10, bottom: 10),
                                    child: Container(
                                        width: 55,
                                        child: Text('Normal',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Normal Month Count'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesNormalMonthCount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesNormalAmount,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Debtors',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesDebtors,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text(
                                            'Monthly Sales Growth Post Funding(%)',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Value(%)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: salesGrowthPostFunding,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Container(
                child: Center(
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.all(5),
                              child: Text(
                                  'No. of Days shop/factory is closed in a week',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  right: 10, top: 10, bottom: 10),
                              child: TextFormField(
                                decoration:
                                    Styles.cashFormInputDecoration('Count'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesClosedInWeek,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.all(5),
                              child: Text('No. of Days working in month',
                                  style: Styles.cashFlowInputFormHeading),
                            ),
                          ),
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  right: 10, top: 10, bottom: 10),
                              child: TextFormField(
                                decoration:
                                    Styles.cashFormInputDecoration('Count'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesNoOfDaysWorkingInMonth,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 150,
                                  child: Text('Sales Daily (Tk)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 10, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesDaily,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 150,
                                  child: Text('Sales Weekly',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesWeekly,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 150,
                                  child: Text('Sales Monthly',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesMonthly,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Center(
                          child: Padding(
                        padding: const EdgeInsets.only(
                            left: 10, right: 10, top: 15, bottom: 20),
                        child: Text(
                          'Sales Seasonality (Max 12 months)',
                          style: Styles.listHeaderTextStyle,
                        ),
                      )),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 10, top: 10, bottom: 10),
                              child: Container(
                                  width: 55,
                                  child: Text('Low',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Low Month Count'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesLowMonthCount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesLowAmount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 10, top: 10, bottom: 10),
                              child: Container(
                                  width: 55,
                                  child: Text('High',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'High Month count'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesHighMonthCount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesHighAmount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 10, top: 10, bottom: 10),
                              child: Container(
                                  width: 55,
                                  child: Text('Normal',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Normal Month Count'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesNormalMonthCount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesNormalAmount,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text('Debtors',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesDebtors,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text(
                                      'Monthly Sales Growth Post Funding',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: salesGrowthPostFunding,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
          );
  }

  Widget purchases() {
    return widget.arguments.isEditable
        ? BlocConsumer<PurchasesCubit, PurchasesState>(
            listener: (context, state) {
              if (state is PurchasesErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is PurchasesInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is PurchasesLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 8, right: 8, top: 18),
                    child: Container(
                      child: Center(
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Daily',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      controller: purchaseDaily,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Weekly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseWeekly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Monthly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseMonthly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Creditors',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseCreditors,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                );
              } else if (state is PurchasesLoadedState) {
                if (state.data.isNotEmpty) {
                  purchaseDaily.text = state.data[0].daily.toString();
                  purchaseWeekly.text = state.data[0].weekly.toString();
                  purchaseMonthly.text = state.data[0].monthly.toString();
                  purchaseCreditors.text = state.data[0].creditors.toString();
                  purchaseMonthlyPreviousLoan.text =
                      state.data[0].monthlyPreviousLoan.toString();
                  purchaseCreditorsPreviousLoan.text =
                      state.data[0].creditorsPreviousLoan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 8, right: 8, top: 18),
                    child: Container(
                      child: Center(
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Daily',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      controller: purchaseDaily,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Weekly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseWeekly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Monthly',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseMonthly,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding: const EdgeInsets.all(15),
                                    child: Container(
                                        width: 100,
                                        child: Text('Creditors',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      keyboardType: TextInputType.number,
                                      controller: purchaseCreditors,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.only(left: 8, right: 8, top: 18),
              child: Container(
                child: Center(
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text('Daily',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                controller: purchaseDaily,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text('Weekly',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: purchaseWeekly,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text('Monthly',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: purchaseMonthly,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.all(15),
                              child: Container(
                                  width: 100,
                                  child: Text('Creditors',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: purchaseCreditors,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
          );
  }

  Widget stock() {
    return widget.arguments.isEditable
        ? BlocConsumer<StockCubit, StockState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is StockInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is StockLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 10, top: 16),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Stock Value (Finished Goods) Tk.',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: stockFinishedGood,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Stock Value (Raw Material/Consumables) Tk.',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: stockRawMaterial,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is StockLoadedState) {
                if (state.data.isNotEmpty) {
                  stockFinishedGood.text =
                      state.data[0].finishedGoods.toString();
                  stockFinishedGoodPreviousLoan.text =
                      state.data[0].finishedGoodsPreviousLoan.toString();
                  stockRawMaterial.text = state.data[0].rawMaterial.toString();
                  stockRawMaterialPreviousLoan.text =
                      state.data[0].rawMaterialPreviousLoan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.only(left: 10, top: 16),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Stock Value (Finished Goods) Tk.',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: stockFinishedGood,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Stock Value (Raw Material/Consumables) Tk.',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: stockRawMaterial,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.only(left: 10, top: 16),
              child: Container(
                child: Column(
                  children: [
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Stock Value (Finished Goods) Tk.',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: stockFinishedGood,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text(
                                    'Stock Value (Raw Material/Consumables) Tk.',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: stockRawMaterial,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget monthly_business_expense() {
    return widget.arguments.isEditable
        ? BlocConsumer<BusinessExpenseMonthlyCubit,
            BusinessExpenseMonthlyState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is BusinessExpenseMonthlyInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is BusinessExpenseMonthlyLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding:
                        const EdgeInsets.only(left: 10, right: 10, top: 15),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 15),
                                  child: Container(
                                      width: 100,
                                      child: Text('Shop/Godown/Factory Rent',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessFactoryRent,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Electricity',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessElectricity,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double staffSalary = double.parse(
                                          businessStaffSalary.text.isNotEmpty
                                              ? businessStaffSalary.text
                                              : '0');
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Staff Salary ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessStaffSalary,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;
                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Telephone/Mobile/Internet',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessMobileInternet,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Transport/Conveyance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessTransportCost,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Gas and Water',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessGasNWater,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Repair and Maintainence',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessRepairNMaintenance,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Diesel for Generator',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    controller: businessDieselForGenerator,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Marketing ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessMarketing,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Labour Expense',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessLabourExpense,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Society Bill & Security',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    controller: businessBillNSecurity,
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Tax',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessTax,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Entertainment ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessEntertainment,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Other Business Expense (10% of total expense)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessOtherBusinessExpense,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is BusinessExpenseMonthlyLoadedState) {
                if (state.data.isNotEmpty) {
                  businessFactoryRent.text = state.data[0].rent.toString();
                  businessElectricity.text =
                      state.data[0].electricity.toString();
                  businessStaffSalary.text =
                      state.data[0].staffSalary.toString();
                  businessMobileInternet.text =
                      state.data[0].telephoneMobileInternet.toString();
                  businessTransportCost.text =
                      state.data[0].transport.toString();
                  businessGasNWater.text = state.data[0].gasAndWater.toString();
                  businessRepairNMaintenance.text =
                      state.data[0].maintenance.toString();
                  businessDieselForGenerator.text =
                      state.data[0].dieselForGenerator.toString();
                  businessMarketing.text = state.data[0].marketing.toString();
                  businessLabourExpense.text =
                      state.data[0].labourExpense.toString();
                  businessBillNSecurity.text =
                      state.data[0].societyBillSecurity.toString();
                  businessTax.text = state.data[0].tax.toString();
                  businessEntertainment.text =
                      state.data[0].entertainment.toString();
                  businessOtherBusinessExpense.text =
                      state.data[0].otherBusinessExpense.toString();
                  businessFactoryRentPreviousLoan.text =
                      state.data[0].rentPreviousLoan.toString();
                  businessElectricityPreviousLoan.text =
                      state.data[0].electricityPreviousLoan.toString();
                  businessStaffSalaryPreviousLoan.text =
                      state.data[0].staffSalaryPreviousLoan.toString();
                  businessMobileInternetPreviousLoan.text =
                      state.data[0].telMobileInterPrevLoan.toString();
                  businessTransportCostPreviousLoan.text =
                      state.data[0].transportPreviousLoan.toString();
                  businessGasNWaterPreviousLoan.text =
                      state.data[0].gasAndWaterPreviousLoan.toString();
                  businessRepairNMaintenancePreviousLoan.text =
                      state.data[0].maintenancePreviousLoan.toString();
                  businessDieselForGeneratorPreviousLoan.text =
                      state.data[0].dieselForGeneratorPrevLoan.toString();
                  businessMarketingPreviousLoan.text =
                      state.data[0].marketingPreviousLoan.toString();
                  businessLabourExpensePreviousLoan.text =
                      state.data[0].labourExpensePreviousLoan.toString();
                  businessBillNSecurityPreviousLoan.text =
                      state.data[0].societyBillSecurityPrevLoan.toString();
                  businessTaxPreviousLoan.text =
                      state.data[0].taxPrevLoan.toString();
                  businessEntertainmentPreviousLoan.text =
                      state.data[0].entertainmentPreviousLoan.toString();
                  businessOtherBusinessExpensePreviousLoan.text =
                      state.data[0].otherBusinessExpensePrevLoan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding:
                        const EdgeInsets.only(left: 10, right: 10, top: 15),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Shop/Godown/Factory Rent',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessFactoryRent,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Electricity',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessElectricity,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double staffSalary = double.parse(
                                          businessStaffSalary.text.isNotEmpty
                                              ? businessStaffSalary.text
                                              : '0');
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Staff Salary ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessStaffSalary,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;
                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Telephone/Mobile/Internet',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessMobileInternet,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Transport/Conveyance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessTransportCost,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Gas and Water',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessGasNWater,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Repair and Maintainence',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessRepairNMaintenance,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Diesel for Generator',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    controller: businessDieselForGenerator,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Marketing ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessMarketing,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Labour Expense',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessLabourExpense,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Society Bill & Security',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    controller: businessBillNSecurity,
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Tax',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessTax,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double entertainment =
                                          businessEntertainment.text.isNotEmpty
                                              ? double.parse(
                                                  businessEntertainment.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              entertainment +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text('Entertainment ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: businessEntertainment,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double factory =
                                          businessFactoryRent.text.isNotEmpty
                                              ? double.parse(
                                                  businessFactoryRent.text)
                                              : 0.0;
                                      double electricity =
                                          businessElectricity.text.isNotEmpty
                                              ? double.parse(
                                                  businessElectricity.text)
                                              : 0.0;
                                      double staffSalary =
                                          businessStaffSalary.text.isNotEmpty
                                              ? double.parse(
                                                  businessStaffSalary.text)
                                              : 0.0;
                                      double mobile =
                                          businessMobileInternet.text.isNotEmpty
                                              ? double.parse(
                                                  businessMobileInternet.text)
                                              : 0.0;
                                      double transport =
                                          businessTransportCost.text.isNotEmpty
                                              ? double.parse(
                                                  businessTransportCost.text)
                                              : 0.0;
                                      double gasnwater = businessGasNWater
                                              .text.isNotEmpty
                                          ? double.parse(businessGasNWater.text)
                                          : 0.0;
                                      double repairnmaintenance =
                                          businessRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double generator =
                                          businessDieselForGenerator
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  businessDieselForGenerator
                                                      .text)
                                              : 0.0;
                                      double marketing = businessMarketing
                                              .text.isNotEmpty
                                          ? double.parse(businessMarketing.text)
                                          : 0.0;
                                      double labourExpense =
                                          businessLabourExpense.text.isNotEmpty
                                              ? double.parse(
                                                  businessLabourExpense.text)
                                              : 0.0;
                                      double billNSecurity =
                                          businessBillNSecurity.text.isNotEmpty
                                              ? double.parse(
                                                  businessBillNSecurity.text)
                                              : 0.0;
                                      double businessTaxvalue =
                                          businessTax.text.isNotEmpty
                                              ? double.parse(businessTax.text)
                                              : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              factory +
                                              electricity +
                                              staffSalary +
                                              mobile +
                                              transport +
                                              gasnwater +
                                              repairnmaintenance +
                                              generator +
                                              marketing +
                                              labourExpense +
                                              billNSecurity +
                                              businessTaxvalue;

                                      businessOtherBusinessExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 100,
                                      child: Text(
                                          'Other Business Expense (10% of total expense)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    controller: businessOtherBusinessExpense,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.only(left: 10, right: 10, top: 15),
              child: Container(
                child: Column(
                  children: [
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Shop/Godown/Factory Rent',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessFactoryRent,
                              enabled: true,
                              onChanged: (comment) {
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Electricity',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessElectricity,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double staffSalary = double.parse(
                                    businessStaffSalary.text.isNotEmpty
                                        ? businessStaffSalary.text
                                        : '0');
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;
                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Staff Salary ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessStaffSalary,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;
                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Telephone/Mobile/Internet',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessMobileInternet,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Transport/Conveyance',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessTransportCost,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Gas and Water',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessGasNWater,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Repair and Maintenance',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessRepairNMaintenance,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Diesel for Generator',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              controller: businessDieselForGenerator,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Marketing ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessMarketing,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Labour Expense',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessLabourExpense,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Society Bill & Security',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              controller: businessBillNSecurity,
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Tax',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessTax,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double entertainment = businessEntertainment
                                        .text.isNotEmpty
                                    ? double.parse(businessEntertainment.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    entertainment +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text('Entertainment ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: businessEntertainment,
                              enabled: true,
                              onChanged: (comment) {
                                double factory =
                                    businessFactoryRent.text.isNotEmpty
                                        ? double.parse(businessFactoryRent.text)
                                        : 0.0;
                                double electricity =
                                    businessElectricity.text.isNotEmpty
                                        ? double.parse(businessElectricity.text)
                                        : 0.0;
                                double staffSalary =
                                    businessStaffSalary.text.isNotEmpty
                                        ? double.parse(businessStaffSalary.text)
                                        : 0.0;
                                double mobile = businessMobileInternet
                                        .text.isNotEmpty
                                    ? double.parse(businessMobileInternet.text)
                                    : 0.0;
                                double transport = businessTransportCost
                                        .text.isNotEmpty
                                    ? double.parse(businessTransportCost.text)
                                    : 0.0;
                                double gasnwater =
                                    businessGasNWater.text.isNotEmpty
                                        ? double.parse(businessGasNWater.text)
                                        : 0.0;
                                double repairnmaintenance =
                                    businessRepairNMaintenance.text.isNotEmpty
                                        ? double.parse(
                                            businessRepairNMaintenance.text)
                                        : 0.0;
                                double generator =
                                    businessDieselForGenerator.text.isNotEmpty
                                        ? double.parse(
                                            businessDieselForGenerator.text)
                                        : 0.0;
                                double marketing =
                                    businessMarketing.text.isNotEmpty
                                        ? double.parse(businessMarketing.text)
                                        : 0.0;
                                double labourExpense = businessLabourExpense
                                        .text.isNotEmpty
                                    ? double.parse(businessLabourExpense.text)
                                    : 0.0;
                                double billNSecurity = businessBillNSecurity
                                        .text.isNotEmpty
                                    ? double.parse(businessBillNSecurity.text)
                                    : 0.0;
                                double businessTaxvalue =
                                    businessTax.text.isNotEmpty
                                        ? double.parse(businessTax.text)
                                        : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    factory +
                                    electricity +
                                    staffSalary +
                                    mobile +
                                    transport +
                                    gasnwater +
                                    repairnmaintenance +
                                    generator +
                                    marketing +
                                    labourExpense +
                                    billNSecurity +
                                    businessTaxvalue;

                                businessOtherBusinessExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 100,
                                child: Text(
                                    'Other Business Expense (10% of total expense)',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              controller: businessOtherBusinessExpense,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget monthly_other_income() {
    return widget.arguments.isEditable
        ? BlocConsumer<OtherIncomeMonthlyCubit, OtherIncomeMonthlyState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is OtherIncomeMonthlyInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is OtherIncomeMonthlyLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Agriculture Income',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: agricultureIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Rental Income',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    controller: rentalIncome,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Salary Income (Family Members)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: familyMemberSalaryIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Allied Agri Income (livestock, fisheries)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: alliedAgriIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Other income (Interest etc) - Please specify',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: otherIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is OtherIncomeMonthlyLoadedState) {
                if (state.data.isNotEmpty) {
                  agricultureIncome.text =
                      state.data[0].agricultureIncome.toString();
                  rentalIncome.text = state.data[0].rentalIncome.toString();
                  familyMemberSalaryIncome.text =
                      state.data[0].salaryIncomeFM.toString();
                  alliedAgriIncome.text =
                      state.data[0].alliedAgriIncome.toString();
                  otherIncome.text = state.data[0].otherIncome.toString();

                  agricultureIncomePreviousLoan.text =
                      state.data[0].agricultureIncomePreviousLoan.toString();
                  rentalIncomePreviousLoan.text =
                      state.data[0].rentalIncomePreviousLoan.toString();
                  familyMemberSalaryIncomePreviousLoan.text =
                      state.data[0].salaryIncomeFMPreviousLoan.toString();
                  alliedAgriIncomePreviousLoan.text =
                      state.data[0].alliedAgriIncomePreviousLoan.toString();
                  otherIncomPreviousLoan.text =
                      state.data[0].otherIncomePreviousLoan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Agriculture Income',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: agricultureIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Rental Income',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    enabled: true,
                                    controller: rentalIncome,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Salary Income (Family Members)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: familyMemberSalaryIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Allied Agri Income (livestock, fisheries)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: alliedAgriIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Other income (Interest etc) - Please specify',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: otherIncome,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.all(10.0),
              child: Container(
                child: Column(
                  children: [
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Agriculture Income',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: agricultureIncome,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Rental Income',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              enabled: true,
                              controller: rentalIncome,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Salary Income (Family Members)',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: familyMemberSalaryIncome,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'Allied Agri Income (livestock, fisheries)',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: alliedAgriIncome,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'Other income (Interest etc) - Please specify',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: otherIncome,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget monthly_personal_expense() {
    return widget.arguments.isEditable
        ? BlocConsumer<PersonalExpenseMonthlyCubit,
            PersonalExpenseMonthlyState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is PersonalExpenseMonthlyInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is PersonalExpenseMonthlyLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('House Rent',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseHouseRent,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Food ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseFood,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Clothing ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseCloth,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Education -Monthly School and Tution Fees',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseEducation,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Electricity',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseElectricity,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Transport',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseTransport,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Telephone/Mobile/Internet',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMobileInternet,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Medical  ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMedical,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Entertainment ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseEntertainment,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;

                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Repair and Maintenance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller:
                                        personalExpenseRepairNMaintenance,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Maid/Manservant ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMaid,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('House Tax ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseHouseTax,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Any other expense (10% of total expense) ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseOtherExpense,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is PersonalExpenseMonthlyLoadedState) {
                if (state.data.isNotEmpty) {
                  personalExpenseHouseRent.text =
                      state.data[0].houserent.toString();
                  personalExpenseFood.text = state.data[0].food.toString();
                  personalExpenseCloth.text = state.data[0].clothing.toString();
                  personalExpenseEducation.text =
                      state.data[0].educationmonthly.toString();
                  personalExpenseElectricity.text =
                      state.data[0].electricity.toString();
                  personalExpenseTransport.text =
                      state.data[0].transportconveyance.toString();
                  personalExpenseMobileInternet.text =
                      state.data[0].telmobileinter.toString();
                  personalExpenseMedical.text =
                      state.data[0].medical.toString();
                  personalExpenseEntertainment.text =
                      state.data[0].entertainment.toString();
                  personalExpenseRepairNMaintenance.text =
                      state.data[0].repairmaintenance.toString();
                  personalExpenseMaid.text = state.data[0].maid.toString();
                  personalExpenseHouseTax.text =
                      state.data[0].housetax.toString();
                  personalExpenseOtherExpense.text =
                      state.data[0].anyotherexpense.toString();

                  personalExpenseHouseRentPrevious.text =
                      state.data[0].houserentpreviousloan.toString();
                  personalExpenseFoodPrevious.text =
                      state.data[0].foodpreviousloan.toString();
                  personalExpenseClothPrevious.text =
                      state.data[0].clothingpreviousloan.toString();
                  personalExpenseEducationPrevious.text =
                      state.data[0].educationmonthlypreviousloan.toString();
                  personalExpenseElectricityPrevious.text =
                      state.data[0].electricitypreviousloan.toString();
                  personalExpenseTransportPrevious.text =
                      state.data[0].transportconveyanceprevloan.toString();
                  personalExpenseMobileInternetPrevious.text =
                      state.data[0].telmobileinterprevloan.toString();
                  personalExpenseMedicalPrevious.text =
                      state.data[0].medicalpreviousloan.toString();
                  personalExpenseEntertainmentPrevious.text =
                      state.data[0].entertainmentpreviousloan.toString();
                  personalExpenseRepairNMaintenancePrevious.text =
                      state.data[0].repairmaintenancepreviousloan.toString();
                  personalExpenseMaidPrevious.text =
                      state.data[0].maidpreviousloan.toString();
                  personalExpenseHouseTaxPrevious.text =
                      state.data[0].housetaxpreviousloan.toString();
                  personalExpenseOtherExpensePrevious.text =
                      state.data[0].anyotherexpensepreviousloan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('House Rent',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseHouseRent,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Food ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseFood,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Clothing ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseCloth,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Education -Monthly School and Tution Fees',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseEducation,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Electricity',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseElectricity,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Transport',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseTransport,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Telephone/Mobile/Internet',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMobileInternet,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Medical  ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMedical,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              entertainment +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Entertainment ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseEntertainment,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;

                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              repairNMaintenance +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Repair and Maintenance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller:
                                        personalExpenseRepairNMaintenance,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;

                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              maid +
                                              houseTax;
                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Maid/Manservant ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseMaid,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double houseTax = personalExpenseHouseTax
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseTax.text)
                                          : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              houseTax;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('House Tax ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseHouseTax,
                                    enabled: true,
                                    onChanged: (comment) {
                                      double house = personalExpenseHouseRent
                                              .text.isNotEmpty
                                          ? double.parse(
                                              personalExpenseHouseRent.text)
                                          : 0.0;
                                      double food =
                                          personalExpenseFood.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseFood.text)
                                              : 0.0;
                                      double cloth =
                                          personalExpenseCloth.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseCloth.text)
                                              : 0.0;
                                      double education =
                                          personalExpenseEducation
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEducation.text)
                                              : 0.0;
                                      double electricity =
                                          personalExpenseElectricity
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseElectricity
                                                      .text)
                                              : 0.0;
                                      double transport =
                                          personalExpenseTransport
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseTransport.text)
                                              : 0.0;
                                      double mobileInternet =
                                          personalExpenseMobileInternet
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMobileInternet
                                                      .text)
                                              : 0.0;
                                      double medical =
                                          personalExpenseMedical.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMedical.text)
                                              : 0.0;
                                      double entertainment =
                                          personalExpenseEntertainment
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseEntertainment
                                                      .text)
                                              : 0.0;
                                      double repairNMaintenance =
                                          personalExpenseRepairNMaintenance
                                                  .text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseRepairNMaintenance
                                                      .text)
                                              : 0.0;
                                      double maid =
                                          personalExpenseMaid.text.isNotEmpty
                                              ? double.parse(
                                                  personalExpenseMaid.text)
                                              : 0.0;
                                      double sum =
                                          double.parse(comment.toString()) +
                                              house +
                                              food +
                                              cloth +
                                              education +
                                              electricity +
                                              transport +
                                              mobileInternet +
                                              medical +
                                              entertainment +
                                              repairNMaintenance +
                                              maid;

                                      personalExpenseOtherExpense.text =
                                          (sum * .1).toString();
                                    },
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Any other expense (10% of total expense) ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: personalExpenseOtherExpense,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.all(10.0),
              child: Container(
                child: Column(
                  children: [
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('House Rent',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseHouseRent,
                              enabled: true,
                              onChanged: (comment) {
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Food ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseFood,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Clothing ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseCloth,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'Education -Monthly School and Tution Fees',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseEducation,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Electricity',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseElectricity,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Transport',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseTransport,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Telephone/Mobile/Internet',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseMobileInternet,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;
                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Medical  ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseMedical,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    entertainment +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Entertainment ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseEntertainment,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;

                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    repairNMaintenance +
                                    maid +
                                    houseTax;
                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Repair and Maintenance',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseRepairNMaintenance,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;

                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    maid +
                                    houseTax;
                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Maid/Manservant ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseMaid,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double houseTax = personalExpenseHouseTax
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseHouseTax.text)
                                    : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    houseTax;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('House Tax ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseHouseTax,
                              enabled: true,
                              onChanged: (comment) {
                                double house =
                                    personalExpenseHouseRent.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseHouseRent.text)
                                        : 0.0;
                                double food =
                                    personalExpenseFood.text.isNotEmpty
                                        ? double.parse(personalExpenseFood.text)
                                        : 0.0;
                                double cloth = personalExpenseCloth
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseCloth.text)
                                    : 0.0;
                                double education =
                                    personalExpenseEducation.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEducation.text)
                                        : 0.0;
                                double electricity =
                                    personalExpenseElectricity.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseElectricity.text)
                                        : 0.0;
                                double transport =
                                    personalExpenseTransport.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseTransport.text)
                                        : 0.0;
                                double mobileInternet =
                                    personalExpenseMobileInternet
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseMobileInternet.text)
                                        : 0.0;
                                double medical = personalExpenseMedical
                                        .text.isNotEmpty
                                    ? double.parse(personalExpenseMedical.text)
                                    : 0.0;
                                double entertainment =
                                    personalExpenseEntertainment.text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseEntertainment.text)
                                        : 0.0;
                                double repairNMaintenance =
                                    personalExpenseRepairNMaintenance
                                            .text.isNotEmpty
                                        ? double.parse(
                                            personalExpenseRepairNMaintenance
                                                .text)
                                        : 0.0;
                                double maid =
                                    personalExpenseMaid.text.isNotEmpty
                                        ? double.parse(personalExpenseMaid.text)
                                        : 0.0;
                                double sum = double.parse(comment.toString()) +
                                    house +
                                    food +
                                    cloth +
                                    education +
                                    electricity +
                                    transport +
                                    mobileInternet +
                                    medical +
                                    entertainment +
                                    repairNMaintenance +
                                    maid;

                                personalExpenseOtherExpense.text =
                                    (sum * .1).toString();
                              },
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'Any other expense (10% of total expense) ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: personalExpenseOtherExpense,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget existing_loans() {
    return widget.arguments.isEditable
        ? BlocConsumer<ExistingLoansCubit, ExistingLoansState>(
            listener: (context, state) {
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ExistingLoansInitialState) {
                //print('Existing Loan 2');
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Name Of Institution',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanNameOfInstitute,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan amount',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanAmount,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('EMI',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanEmi,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan Outstanding',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: existLoanOutstanding,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Paid Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanpaidTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Balance Tenor ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanBalanceTenor,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan to be Closed  (Yes/No)',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.text,
                                  controller: existloanToBeClosed,
                                  enabled: true,
                                  onChanged: (comment) {
                                    if (comment.toLowerCase() == 'no') {
                                      existLoanobligate.text =
                                          existLoanEmi.text;
                                    } else {
                                      existLoanobligate.text = '0';
                                    }
                                  },
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan obligate',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanobligate,
                                  enabled: false,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Previous Loan Obligation ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanpreviousObligate,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                ExistingLoan exitingLoan = ExistingLoan();
                                exitingLoan.nameofinstitution =
                                    existLoanNameOfInstitute.text;
                                exitingLoan.loanamount = double.parse(
                                    existLoanAmount.text.isNotEmpty
                                        ? existLoanAmount.text
                                        : '0');
                                exitingLoan.emi = double.parse(
                                    existLoanEmi.text.isNotEmpty
                                        ? existLoanEmi.text
                                        : '0');
                                exitingLoan.loanoutstanding = double.parse(
                                    existLoanOutstanding.text.isNotEmpty
                                        ? existLoanOutstanding.text
                                        : '0');
                                exitingLoan.tenor = double.parse(
                                    existLoanTenor.text.isNotEmpty
                                        ? existLoanTenor.text
                                        : '0');
                                exitingLoan.paidtenor = double.parse(
                                    existLoanpaidTenor.text.isNotEmpty
                                        ? existLoanpaidTenor.text
                                        : '0');
                                exitingLoan.balancetenor = double.parse(
                                    existLoanBalanceTenor.text.isNotEmpty
                                        ? existLoanBalanceTenor.text
                                        : '0');
                                exitingLoan.loantobeclosed =
                                    existloanToBeClosed.text;
                                exitingLoan.obligate = double.parse(
                                    existLoanobligate.text.isNotEmpty
                                        ? existLoanobligate.text
                                        : '0');
                                exitingLoan.previousloanobligation =
                                    double.parse(
                                        existLoanobligate.text.isNotEmpty
                                            ? existLoanobligate.text
                                            : '0');

                                existingLoansCubit.addLoan(exitingLoan);
                                existingLoansCubit.getLoanList();
                                existLoanNameOfInstitute.clear();
                                existLoanAmount.clear();
                                existLoanEmi.clear();
                                existLoanOutstanding.clear();
                                existLoanTenor.clear();
                                existLoanpaidTenor.clear();
                                existLoanBalanceTenor.clear();

                                existloanToBeClosed.clear();
                                existLoanobligate.clear();
                                existLoanobligate.clear();
                                existLoanpreviousObligate.clear();

                                addExistingLoan = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        )
                      ],
                    ),
                  ),
                );
              } else if (state is ExistingLoansLoadingState) {
                // print('Existing Loan 3 ${Ex}');
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Name Of Institution : ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanNameOfInstitute,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan amount',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanAmount,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('EMI',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanEmi,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan Outstanding',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: existLoanOutstanding,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Paid Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanpaidTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Balance Tenor ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanBalanceTenor,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan to be Closed  (Yes/No)',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.text,
                                  controller: existloanToBeClosed,
                                  enabled: true,
                                  onChanged: (comment) {
                                    if (comment.toLowerCase() == 'no') {
                                      existLoanobligate.text =
                                          existLoanEmi.text;
                                    } else {
                                      existLoanobligate.text = '0';
                                    }
                                  },
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan obligate',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanobligate,
                                  enabled: false,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Previous Loan Obligation ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanpreviousObligate,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                ExistingLoan exitingLoan = ExistingLoan();

                                exitingLoan.nameofinstitution =
                                    existLoanNameOfInstitute.text;
                                exitingLoan.loanamount = double.parse(
                                    existLoanAmount.text.isNotEmpty
                                        ? existLoanAmount.text
                                        : '0');
                                exitingLoan.emi = double.parse(
                                    existLoanEmi.text.isNotEmpty
                                        ? existLoanEmi.text
                                        : '0');
                                exitingLoan.loanoutstanding = double.parse(
                                    existLoanOutstanding.text.isNotEmpty
                                        ? existLoanOutstanding.text
                                        : '0');
                                exitingLoan.tenor = double.parse(
                                    existLoanTenor.text.isNotEmpty
                                        ? existLoanTenor.text
                                        : '0');
                                exitingLoan.paidtenor = double.parse(
                                    existLoanpaidTenor.text.isNotEmpty
                                        ? existLoanpaidTenor.text
                                        : '0');
                                exitingLoan.balancetenor = double.parse(
                                    existLoanBalanceTenor.text.isNotEmpty
                                        ? existLoanBalanceTenor.text
                                        : '0');
                                exitingLoan.loantobeclosed =
                                    existloanToBeClosed.text;
                                exitingLoan.obligate = double.parse(
                                    existLoanobligate.text.isNotEmpty
                                        ? existLoanobligate.text
                                        : '0');
                                exitingLoan.previousloanobligation =
                                    double.parse(existLoanpreviousObligate
                                            .text.isNotEmpty
                                        ? existLoanpreviousObligate.text
                                        : '0');

                                existingLoansCubit.addLoan(exitingLoan);
                                existingLoansCubit.getLoanList();
                                existLoanNameOfInstitute.clear();
                                existLoanAmount.clear();
                                existLoanEmi.clear();
                                existLoanOutstanding.clear();
                                existLoanTenor.clear();
                                existLoanpaidTenor.clear();
                                existLoanBalanceTenor.clear();

                                existloanToBeClosed.clear();
                                existLoanobligate.clear();
                                existLoanobligate.clear();
                                existLoanpreviousObligate.clear();

                                addExistingLoan = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        )
                      ],
                    ),
                  ),
                );
              } else if (state is ExistingLoansLoadedState) {
                var productList = state.data;

                return productList.isNotEmpty && addExistingLoan == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                      left: 24, right: 24, top: 16, bottom: 16),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Name Of Institution : ',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                '${item.nameofinstitution}',
                                                                style: Styles
                                                                    .listButtonTextStyle,
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Amount :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanamount}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Emi :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.emi}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Outstanding :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanoutstanding}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.tenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Paid tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.paidtenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Balance tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.balancetenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan To be close :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loantobeclosed}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Previous Loan Obligation :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.previousloanobligation}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                          Align(
                            alignment: Alignment.bottomRight,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  bottom: 20, right: 20),
                              child: FloatingActionButton(
                                onPressed: () {
                                  //Navigator.pop(context);
                                  addExistingLoan = true;
                                  setState(() {});
                                },
                                child: Icon(Icons.add,
                                    color: ColorResources.WHITE),
                                backgroundColor:
                                    ColorResources.APP_THEME_COLOR,
                              ),
                            ),
                          )
                        ],
                      )
                    : SingleChildScrollView(
                        child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Name Of Institution : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle)),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanNameOfInstitute,
                                        keyboardType: TextInputType.multiline,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan amount',
                                              style: Styles
                                                  .listDescHeadingTextStyle)),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanAmount,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('EMI')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanEmi,
                                        enabled: true,
                                        onChanged: (comment) {
                                          if (existloanToBeClosed.text
                                                  .toLowerCase() ==
                                              'no') {
                                            existLoanobligate.text =
                                                existLoanEmi.text;
                                          } else {
                                            existLoanobligate.text = '0';
                                          }
                                        },
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan Outstanding')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller: existLoanOutstanding,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Paid Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanpaidTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Balance Tenor ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanBalanceTenor,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Loan to be Closed  (Yes/No)')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.text,
                                        controller: existloanToBeClosed,
                                        enabled: true,
                                        onChanged: (comment) {
                                          if (comment.toLowerCase() == 'no') {
                                            existLoanobligate.text =
                                                existLoanEmi.text;
                                          } else {
                                            existLoanobligate.text = '0';
                                          }
                                        },
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan obligate')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanobligate,
                                        enabled: false,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Previous Loan Obligation ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanpreviousObligate,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      ExistingLoan exitingLoan = ExistingLoan();

                                      exitingLoan.nameofinstitution =
                                          existLoanNameOfInstitute.text;
                                      exitingLoan.loanamount = double.parse(
                                          existLoanAmount.text.isNotEmpty
                                              ? existLoanAmount.text
                                              : '0');
                                      exitingLoan.emi = double.parse(
                                          existLoanEmi.text.isNotEmpty
                                              ? existLoanEmi.text
                                              : '0');
                                      exitingLoan.loanoutstanding =
                                          double.parse(existLoanOutstanding
                                                  .text.isNotEmpty
                                              ? existLoanOutstanding.text
                                              : '0');
                                      exitingLoan.tenor = double.parse(
                                          existLoanTenor.text.isNotEmpty
                                              ? existLoanTenor.text
                                              : '0');
                                      exitingLoan.paidtenor = double.parse(
                                          existLoanpaidTenor.text.isNotEmpty
                                              ? existLoanpaidTenor.text
                                              : '0');
                                      exitingLoan.balancetenor = double.parse(
                                          existLoanBalanceTenor.text.isNotEmpty
                                              ? existLoanBalanceTenor.text
                                              : '0');
                                      exitingLoan.loantobeclosed =
                                          existloanToBeClosed.text;
                                      exitingLoan.obligate = double.parse(
                                          existLoanobligate.text.isNotEmpty
                                              ? existLoanobligate.text
                                              : '0');
                                      exitingLoan.previousloanobligation =
                                          double.parse(
                                              existLoanobligate.text.isNotEmpty
                                                  ? existLoanobligate.text
                                                  : '0');

                                      existingLoansCubit.addLoan(exitingLoan);
                                      existingLoansCubit.getLoanList();
                                      existLoanNameOfInstitute.clear();
                                      existLoanAmount.clear();
                                      existLoanEmi.clear();
                                      existLoanOutstanding.clear();
                                      existLoanTenor.clear();
                                      existLoanpaidTenor.clear();
                                      existLoanBalanceTenor.clear();

                                      existloanToBeClosed.clear();
                                      existLoanobligate.clear();
                                      existLoanobligate.clear();
                                      existLoanpreviousObligate.clear();

                                      addExistingLoan = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              )
                            ],
                          ),
                        ),
                      );
              } else if (state is ExistingLoansFromAPILoadedState) {
                var productList = state.data;

                return productList.isNotEmpty && addExistingLoan == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                      left: 24, right: 24, top: 16, bottom: 16),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Name Of Institution : ',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                '${item.nameofinstitution}',
                                                                style: Styles
                                                                    .listButtonTextStyle,
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Amount :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanamount}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Emi :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.emi}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Outstanding :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanoutstanding}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.tenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Paid tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.paidtenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Balance tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.balancetenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan To be close :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loantobeclosed}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Previous Loan Obligation :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.previousloanobligation}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                          /*Expanded(
                            child: Align(
                              alignment: Alignment.bottomRight,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    bottom: 20, right: 20),
                                child: FloatingActionButton(
                                  onPressed: () {
                                    //Navigator.pop(context);
                                    addExistingLoan = true;
                                    setState(() {});
                                  },
                                  child: Icon(Icons.add,
                                      color: ColorResources.WHITE),
                                  backgroundColor:
                                      ColorResources.APP_THEME_COLOR,
                                ),
                              ),
                            ),
                          )*/
                        ],
                      )
                    : SingleChildScrollView(
                        child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Name Of Institution : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle)),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanNameOfInstitute,
                                        keyboardType: TextInputType.multiline,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan amount',
                                              style: Styles
                                                  .listDescHeadingTextStyle)),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanAmount,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('EMI')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanEmi,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan Outstanding')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller: existLoanOutstanding,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Paid Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanpaidTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Balance Tenor ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanBalanceTenor,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Loan to be Closed  (Yes/No)')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.text,
                                        controller: existloanToBeClosed,
                                        enabled: true,
                                        onChanged: (comment) {
                                          if (comment.toLowerCase() == 'no') {
                                            existLoanobligate.text =
                                                existLoanEmi.text;
                                          } else {
                                            existLoanobligate.text = '0';
                                          }
                                        },
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan obligate')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanobligate,
                                        enabled: false,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Previous Loan Obligation ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanpreviousObligate,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      ExistingLoan exitingLoan = ExistingLoan();

                                      exitingLoan.nameofinstitution =
                                          existLoanNameOfInstitute.text;
                                      exitingLoan.loanamount = double.parse(
                                          existLoanAmount.text.isNotEmpty
                                              ? existLoanAmount.text
                                              : '0');
                                      exitingLoan.emi = double.parse(
                                          existLoanEmi.text.isNotEmpty
                                              ? existLoanEmi.text
                                              : '0');
                                      exitingLoan.loanoutstanding =
                                          double.parse(existLoanOutstanding
                                                  .text.isNotEmpty
                                              ? existLoanOutstanding.text
                                              : '0');
                                      exitingLoan.tenor = double.parse(
                                          existLoanTenor.text.isNotEmpty
                                              ? existLoanTenor.text
                                              : '0');
                                      exitingLoan.paidtenor = double.parse(
                                          existLoanpaidTenor.text.isNotEmpty
                                              ? existLoanpaidTenor.text
                                              : '0');
                                      exitingLoan.balancetenor = double.parse(
                                          existLoanBalanceTenor.text.isNotEmpty
                                              ? existLoanBalanceTenor.text
                                              : '0');
                                      exitingLoan.loantobeclosed =
                                          existloanToBeClosed.text;
                                      exitingLoan.obligate = double.parse(
                                          existLoanobligate.text.isNotEmpty
                                              ? existLoanobligate.text
                                              : '0');
                                      exitingLoan.previousloanobligation =
                                          double.parse(
                                              existLoanobligate.text.isNotEmpty
                                                  ? existLoanobligate.text
                                                  : '0');

                                      existingLoansCubit.addLoan(exitingLoan);
                                      existingLoansCubit.getLoanList();
                                      existLoanNameOfInstitute.clear();
                                      existLoanAmount.clear();
                                      existLoanEmi.clear();
                                      existLoanOutstanding.clear();
                                      existLoanTenor.clear();
                                      existLoanpaidTenor.clear();
                                      existLoanBalanceTenor.clear();

                                      existloanToBeClosed.clear();
                                      existLoanobligate.clear();
                                      existLoanobligate.clear();
                                      existLoanpreviousObligate.clear();

                                      addExistingLoan = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              )
                            ],
                          ),
                        ),
                      );
              } else {
                // (state is WeatherError)
                // print('Existing Loan 5');
                return Center(
                  child: Container(
                    child: Text('Network Error 2'),
                  ),
                );
              }
            },
          )
        : BlocConsumer<ExistingLoansCubit, ExistingLoansState>(
            listener: (context, state) {
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ExistingLoansInitialState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Name Of Institution : ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanNameOfInstitute,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan amount',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanAmount,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('EMI',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanEmi,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan Outstanding',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: existLoanOutstanding,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Paid Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanpaidTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Balance Tenor ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanBalanceTenor,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan to be Closed  (Yes/No)',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.text,
                                  controller: existloanToBeClosed,
                                  enabled: true,
                                  onChanged: (comment) {
                                    if (comment.toLowerCase() == 'no') {
                                      existLoanobligate.text =
                                          existLoanEmi.text;
                                    } else {
                                      existLoanobligate.text = '0';
                                    }
                                  },
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan obligate',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanobligate,
                                  enabled: false,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Previous Loan Obligation ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanpreviousObligate,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                ExistingLoan exitingLoan = ExistingLoan();

                                exitingLoan.nameofinstitution =
                                    existLoanNameOfInstitute.text;
                                exitingLoan.loanamount = double.parse(
                                    existLoanAmount.text.isNotEmpty
                                        ? existLoanAmount.text
                                        : '0');
                                exitingLoan.emi = double.parse(
                                    existLoanEmi.text.isNotEmpty
                                        ? existLoanEmi.text
                                        : '0');
                                exitingLoan.loanoutstanding = double.parse(
                                    existLoanOutstanding.text.isNotEmpty
                                        ? existLoanOutstanding.text
                                        : '0');
                                exitingLoan.tenor = double.parse(
                                    existLoanTenor.text.isNotEmpty
                                        ? existLoanTenor.text
                                        : '0');
                                exitingLoan.paidtenor = double.parse(
                                    existLoanpaidTenor.text.isNotEmpty
                                        ? existLoanpaidTenor.text
                                        : '0');
                                exitingLoan.balancetenor = double.parse(
                                    existLoanBalanceTenor.text.isNotEmpty
                                        ? existLoanBalanceTenor.text
                                        : '0');
                                exitingLoan.loantobeclosed =
                                    existloanToBeClosed.text;
                                exitingLoan.obligate = double.parse(
                                    existLoanobligate.text.isNotEmpty
                                        ? existLoanobligate.text
                                        : '0');
                                exitingLoan.previousloanobligation =
                                    double.parse(
                                        existLoanobligate.text.isNotEmpty
                                            ? existLoanobligate.text
                                            : '0');

                                existingLoansCubit.addLoan(exitingLoan);
                                existingLoansCubit.getLoanList();
                                existLoanNameOfInstitute.clear();
                                existLoanAmount.clear();
                                existLoanEmi.clear();
                                existLoanOutstanding.clear();
                                existLoanTenor.clear();
                                existLoanpaidTenor.clear();
                                existLoanBalanceTenor.clear();

                                existloanToBeClosed.clear();
                                existLoanobligate.clear();
                                existLoanobligate.clear();
                                existLoanpreviousObligate.clear();

                                addExistingLoan = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        )
                      ],
                    ),
                  ),
                );
              } else if (state is ExistingLoansLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Name Of Institution',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanNameOfInstitute,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan amount',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanAmount,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('EMI',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanEmi,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan Outstanding',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  controller: existLoanOutstanding,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Paid Tenor',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  controller: existLoanpaidTenor,
                                  keyboardType: TextInputType.number,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Balance Tenor ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanBalanceTenor,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan to be Closed  (Yes/No)',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.text,
                                  controller: existloanToBeClosed,
                                  enabled: true,
                                  onChanged: (comment) {
                                    if (comment.toLowerCase() == 'no') {
                                      existLoanobligate.text =
                                          existLoanEmi.text;
                                    } else {
                                      existLoanobligate.text = '0';
                                    }
                                  },
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Loan obligate',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanobligate,
                                  enabled: false,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Previous Loan Obligation ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: null,
                                  keyboardType: TextInputType.number,
                                  controller: existLoanpreviousObligate,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                ExistingLoan exitingLoan = ExistingLoan();

                                exitingLoan.nameofinstitution =
                                    existLoanNameOfInstitute.text;
                                exitingLoan.loanamount = double.parse(
                                    existLoanAmount.text.isNotEmpty
                                        ? existLoanAmount.text
                                        : '0');
                                exitingLoan.emi = double.parse(
                                    existLoanEmi.text.isNotEmpty
                                        ? existLoanEmi.text
                                        : '0');
                                exitingLoan.loanoutstanding = double.parse(
                                    existLoanOutstanding.text.isNotEmpty
                                        ? existLoanOutstanding.text
                                        : '0');
                                exitingLoan.tenor = double.parse(
                                    existLoanTenor.text.isNotEmpty
                                        ? existLoanTenor.text
                                        : '0');
                                exitingLoan.paidtenor = double.parse(
                                    existLoanpaidTenor.text.isNotEmpty
                                        ? existLoanpaidTenor.text
                                        : '0');
                                exitingLoan.balancetenor = double.parse(
                                    existLoanBalanceTenor.text.isNotEmpty
                                        ? existLoanBalanceTenor.text
                                        : '0');
                                exitingLoan.loantobeclosed =
                                    existloanToBeClosed.text;
                                exitingLoan.obligate = double.parse(
                                    existLoanobligate.text.isNotEmpty
                                        ? existLoanobligate.text
                                        : '0');
                                exitingLoan.previousloanobligation =
                                    double.parse(
                                        existLoanobligate.text.isNotEmpty
                                            ? existLoanobligate.text
                                            : '0');

                                existingLoansCubit.addLoan(exitingLoan);
                                existingLoansCubit.getLoanList();
                                existLoanNameOfInstitute.clear();
                                existLoanAmount.clear();
                                existLoanEmi.clear();
                                existLoanOutstanding.clear();
                                existLoanTenor.clear();
                                existLoanpaidTenor.clear();
                                existLoanBalanceTenor.clear();

                                existloanToBeClosed.clear();
                                existLoanobligate.clear();
                                existLoanobligate.clear();
                                existLoanpreviousObligate.clear();

                                addExistingLoan = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        )
                      ],
                    ),
                  ),
                );
              } else if (state is ExistingLoansLoadedState) {
                var productList = state.data;

                return productList.isNotEmpty && addExistingLoan == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                      left: 24, right: 24, top: 16, bottom: 16),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Name Of Institution : ',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                '${item.nameofinstitution}',
                                                                style: Styles
                                                                    .listButtonTextStyle,
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Amount :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanamount}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Emi :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.emi}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan Outstanding :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loanoutstanding}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.tenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Paid tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.paidtenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Balance tenor :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.balancetenor}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Loan To be close :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.loantobeclosed}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Previous Loan Obligation :',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.previousloanobligation}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                          Align(
                            alignment: Alignment.bottomRight,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  bottom: 20, right: 20),
                              child: FloatingActionButton(
                                onPressed: () {
                                  //Navigator.pop(context);
                                  addExistingLoan = true;
                                  setState(() {});
                                },
                                child: Icon(Icons.add,
                                    color: ColorResources.WHITE),
                                backgroundColor:
                                    ColorResources.APP_THEME_COLOR,
                              ),
                            ),
                          )
                        ],
                      )
                    : SingleChildScrollView(
                        child: Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Column(
                            children: [
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Name Of Institution')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanNameOfInstitute,
                                        keyboardType: TextInputType.multiline,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                            'Loan amount',
                                          )),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanAmount,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('EMI')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanEmi,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan Outstanding')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        controller: existLoanOutstanding,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200, child: Text('Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Paid Tenor')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        controller: existLoanpaidTenor,
                                        keyboardType: TextInputType.number,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Balance Tenor ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanBalanceTenor,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Loan to be Closed  (Yes/No)')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.text,
                                        controller: existloanToBeClosed,
                                        enabled: true,
                                        onChanged: (comment) {
                                          if (comment.toLowerCase() == 'no') {
                                            existLoanobligate.text =
                                                existLoanEmi.text;
                                          } else {
                                            existLoanobligate.text = '0';
                                          }
                                        },
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text('Loan obligate')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanobligate,
                                        enabled: false,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Row(
                                children: [
                                  Flexible(
                                    flex: 1,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, top: 5),
                                      child: Container(
                                          width: 200,
                                          child: Text(
                                              'Previous Loan Obligation ')),
                                    ),
                                  ),
                                  Flexible(
                                    flex: 2,
                                    child: Padding(
                                      padding: const EdgeInsets.only(
                                          left: 5, right: 5, top: 5, bottom: 5),
                                      child: TextFormField(
                                        decoration:
                                            Styles.cashFormInputDecoration(''),
                                        cursorColor:
                                            Color.fromRGBO(0, 0, 0, 0.1),
                                        style: Styles.hintTextStyle,
                                        maxLines: null,
                                        keyboardType: TextInputType.number,
                                        controller: existLoanpreviousObligate,
                                        enabled: true,
                                        onChanged: (comment) {},
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      ExistingLoan exitingLoan = ExistingLoan();

                                      exitingLoan.nameofinstitution =
                                          existLoanNameOfInstitute.text;
                                      exitingLoan.loanamount = double.parse(
                                          existLoanAmount.text.isNotEmpty
                                              ? existLoanAmount.text
                                              : '0');
                                      exitingLoan.emi = double.parse(
                                          existLoanEmi.text.isNotEmpty
                                              ? existLoanEmi.text
                                              : '0');
                                      exitingLoan.loanoutstanding =
                                          double.parse(existLoanOutstanding
                                                  .text.isNotEmpty
                                              ? existLoanOutstanding.text
                                              : '0');
                                      exitingLoan.tenor = double.parse(
                                          existLoanTenor.text.isNotEmpty
                                              ? existLoanTenor.text
                                              : '0');
                                      exitingLoan.paidtenor = double.parse(
                                          existLoanpaidTenor.text.isNotEmpty
                                              ? existLoanpaidTenor.text
                                              : '0');
                                      exitingLoan.balancetenor = double.parse(
                                          existLoanBalanceTenor.text.isNotEmpty
                                              ? existLoanBalanceTenor.text
                                              : '0');
                                      exitingLoan.loantobeclosed =
                                          existloanToBeClosed.text;
                                      exitingLoan.obligate = double.parse(
                                          existLoanobligate.text.isNotEmpty
                                              ? existLoanobligate.text
                                              : '0');
                                      exitingLoan.previousloanobligation =
                                          double.parse(
                                              existLoanobligate.text.isNotEmpty
                                                  ? existLoanobligate.text
                                                  : '0');

                                      existingLoansCubit.addLoan(exitingLoan);
                                      existingLoansCubit.getLoanList();
                                      existLoanNameOfInstitute.clear();
                                      existLoanAmount.clear();
                                      existLoanEmi.clear();
                                      existLoanOutstanding.clear();
                                      existLoanTenor.clear();
                                      existLoanpaidTenor.clear();
                                      existLoanBalanceTenor.clear();

                                      existloanToBeClosed.clear();
                                      existLoanobligate.clear();
                                      existLoanobligate.clear();
                                      existLoanpreviousObligate.clear();

                                      addExistingLoan = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              )
                            ],
                          ),
                        ),
                      );
              } else {
                // (state is WeatherError)

                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          );
  }

  Widget regular_investment() {
    return widget.arguments.isEditable
        ? BlocConsumer<RegularInvestmentCubit, RegularInvestmentState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is RegularInvestmentInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is RegularInvestmentLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Life Insurance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentLifeInsurance,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'General Insurance - For Health and Business ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentGeneralInsurance,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('DPS ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentDPS,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Gross Margin in Business %',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Value (%)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentGrossMargin,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Monthly Cash in Hand from Business  (Tk.)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentMonthlyCashInhand,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else if (state is RegularInvestmentLoadedState) {
                if (state.data.isNotEmpty) {
                  investmentLifeInsurance.text =
                      state.data[0].lifeinsurance.toString();
                  investmentGeneralInsurance.text =
                      state.data[0].generalinsurance.toString();
                  investmentDPS.text = state.data[0].dps.toString();
                  investmentGrossMargin.text =
                      state.data[0].grossmargininbusiness.toString();
                  investmentMonthlyCashInhand.text =
                      state.data[0].monthlycashinhandfrombusiness.toString();
                  investmentLifeInsurancePreviousLoan.text =
                      state.data[0].lifeinsurancepreviousloan.toString();
                  investmentGeneralInsurancePreviousLoan.text =
                      state.data[0].generalinsurancepreviousloan.toString();
                  investmentDPSPreviousLoan.text =
                      state.data[0].dpspreviousloan.toString();
                  investmentGrossMarginPreviousLoan.text =
                      state.data[0].grossmargininbusinessprevloan.toString();
                  investmentMonthlyCashInhandPreviousLoan.text =
                      state.data[0].cashinhandfrombusiprevloan.toString();
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Container(
                      child: Column(
                        children: [
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Life Insurance',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentLifeInsurance,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'General Insurance - For Health and Business ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentGeneralInsurance,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('DPS ',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentDPS,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text('Gross Margin in Business %',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Value (%)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentGrossMargin,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                          Row(
                            children: [
                              Flexible(
                                flex: 1,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.only(left: 5, top: 5),
                                  child: Container(
                                      width: 200,
                                      child: Text(
                                          'Monthly Cash in Hand from Business  (Tk.)',
                                          style:
                                              Styles.cashFlowInputFormHeading)),
                                ),
                              ),
                              Flexible(
                                flex: 2,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      left: 5, right: 5, top: 5, bottom: 5),
                                  child: TextFormField(
                                    decoration: Styles.cashFormInputDecoration(
                                        'Total Amount (Tk.)'),
                                    cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                    style: Styles.hintTextStyle,
                                    maxLines: null,
                                    keyboardType: TextInputType.number,
                                    controller: investmentMonthlyCashInhand,
                                    enabled: true,
                                    onChanged: (comment) {},
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.all(10.0),
              child: Container(
                child: Column(
                  children: [
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Life Insurance',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: investmentLifeInsurance,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'General Insurance - For Health and Business ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: investmentGeneralInsurance,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('DPS ',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: investmentDPS,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text('Gross Margin in Business %',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration:
                                  Styles.cashFormInputDecoration('Value (%)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: investmentGrossMargin,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                    Row(
                      children: [
                        Flexible(
                          flex: 1,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5, top: 5),
                            child: Container(
                                width: 200,
                                child: Text(
                                    'Monthly Cash in Hand from Business  (Tk.)',
                                    style: Styles.cashFlowInputFormHeading)),
                          ),
                        ),
                        Flexible(
                          flex: 2,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                left: 5, right: 5, top: 5, bottom: 5),
                            child: TextFormField(
                              decoration: Styles.cashFormInputDecoration(
                                  'Total Amount (Tk.)'),
                              cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                              style: Styles.hintTextStyle,
                              maxLines: null,
                              keyboardType: TextInputType.number,
                              controller: investmentMonthlyCashInhand,
                              enabled: true,
                              onChanged: (comment) {},
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          );
  }

  Widget product_sales_form() {
    return Padding(
        padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
        child: Column(
          children: [
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Type of product / service',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      maxLines: null,
                      controller: productSaleTypeController,
                      keyboardType: TextInputType.multiline,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Number of Units',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      controller: productSaleUnitsController,
                      maxLines: null,
                      keyboardType: TextInputType.number,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Average Price per Service/Unit',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      controller: productSalePriceController,
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      maxLines: null,
                      keyboardType: TextInputType.number,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Expanded(
              child: Align(
                alignment: Alignment.bottomRight,
                child: Padding(
                  padding: const EdgeInsets.only(bottom: 20, right: 20),
                  child: FloatingActionButton(
                    onPressed: () {
                      var product = ProductSale(
                          productSaleTypeController.text,
                          double.parse(productSaleUnitsController.text),
                          double.parse(productSalePriceController.text));

                      blocProductSale.addProduct(product);
                      blocProductSale.getProductList();
                      productSaleTypeController.clear();
                      productSaleUnitsController.clear();
                      productSalePriceController.clear();

                      addSaleProduct = false;
                      setState(() {});
                    },
                    child: Icon(
                      Icons.done,
                      color: ColorResources.WHITE,
                    ),
                    backgroundColor: ColorResources.APP_THEME_COLOR,
                  ),
                ),
              ),
            )
          ],
        ));
  }

  Widget product_sales_list(List<ProductSale>  productList) {
    return Stack(
      children: [
        ListView.builder(
            itemCount: productList.length,
            itemBuilder: (BuildContext context, int index) {
              var item = productList[index];
              return Padding(
                padding: const EdgeInsets.only(
                  left: 16,
                  right: 16,
                  top: 16,
                ),
                child: Container(
                  decoration: BoxDecoration(
                    color: ColorResources.WHITE,
                    border: Border.all(
                        color:
                        ColorResources.LIST_BORDER_WHITE,
                        width: 1),
                    borderRadius:
                    BorderRadius.all(Radius.circular(
                      10,
                    )),
                  ),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            child: Wrap(
                              children: [
                                Padding(
                                  padding:
                                  const EdgeInsets.all(
                                      16.0),
                                  child: Align(
                                    alignment:
                                    Alignment.centerLeft,
                                    child: Column(
                                      crossAxisAlignment:
                                      CrossAxisAlignment
                                          .start,
                                      children: [
                                        Column(
                                          children: [
                                            Row(
                                              children: [
                                                Text(
                                                  'Type of product : ',
                                                  style: Styles
                                                      .listDescHeadingTextStyle,
                                                ),
                                                Text(
                                                    '${item.typeOfProduct}',
                                                    style: Styles
                                                        .listButtonTextStyle),
                                              ],
                                            )
                                          ],
                                        ),
                                        SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            Text(
                                              'Number of units : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle,
                                            ),
                                            Text(
                                                '${item.numberOfUnits}',
                                                style: Styles
                                                    .listButtonTextStyle),
                                          ],
                                        ),
                                        SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            Text(
                                              'Service Prize : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle,
                                            ),
                                            Text(
                                                '${item.pricePerService}',
                                                style: Styles
                                                    .listButtonTextStyle),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                )
                              ],
                            ),
                            flex: 7,
                          ),
                          Flexible(
                            child: ElevatedButton(
                                onPressed: () {
                                  blocProductSale
                                      .deleteProduct(index);
                                  //blocProductSale.getProductList();
                                  setState(() {});
                                },
                                child: Text('Delete')),
                            flex: 2,
                          )
                        ],
                      ),
                    ],
                  ),
                ),
              );
            }),
        Align(
          alignment: Alignment.bottomRight,
          child: Padding(
            padding:
            const EdgeInsets.only(bottom: 20, right: 20),
            child: FloatingActionButton(
              onPressed: () {
                //Navigator.pop(context);
                addSaleProduct = true;
                setState(() {});
              },
              child: Icon(Icons.add,
                  color: ColorResources.WHITE),
              backgroundColor: ColorResources.APP_THEME_COLOR,
            ),
          ),
        )
      ],
    );
  }

  Widget product_sale_price() {
    return widget.arguments.isEditable
        ? BlocConsumer<ProductSalePriceCubit, ProductSalePriceState>(
            listener: (context, state) {
              print('Sate $state');
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ProductSalePriceInitialState) {
                return SizedBox();
              } else if (state is ProductSalePriceLoadingState) {
                return product_sales_form();
              } else if (state is ProductSalePriceLoadedFromAPIState) {
                var productList = state.data;
                return productList.isNotEmpty && addSaleProduct == false
                    ? Stack(
                  children: [
                    ListView.builder(
                        itemCount: productList.length,
                        itemBuilder: (BuildContext context, int index) {
                          var item = productList[index];
                          return Padding(
                            padding: EdgeInsets.only(
                              left: 16,
                              right: 16,
                              top: 16,
                            ),
                            child: Container(
                              decoration: BoxDecoration(
                                color: ColorResources.WHITE,
                                border: Border.all(
                                    color: ColorResources.LIST_BORDER_WHITE, width: 1),
                                borderRadius: BorderRadius.all(Radius.circular(
                                  10,
                                )),
                              ),
                              child: Column(
                                children: [
                                  Row(
                                    children: [
                                      Flexible(
                                        child: Wrap(
                                          children: [
                                            Padding(
                                              padding: const EdgeInsets.all(16.0),
                                              child: Align(
                                                alignment: Alignment.centerLeft,
                                                child: Column(
                                                  crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                                  children: [
                                                    Column(
                                                      children: [
                                                        Row(
                                                          children: [
                                                            Text(
                                                              'Type of product : ',
                                                              style: Styles
                                                                  .listDescHeadingTextStyle,
                                                            ),
                                                            Text('${item.typeOfProduct}',
                                                                style: Styles
                                                                    .listButtonTextStyle),
                                                          ],
                                                        )
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Number of units : ',
                                                          style: Styles
                                                              .listDescHeadingTextStyle,
                                                        ),
                                                        Text('${item.numberOfUnits}',
                                                            style:
                                                            Styles.listButtonTextStyle),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Service Prize : ',
                                                          style: Styles
                                                              .listDescHeadingTextStyle,
                                                        ),
                                                        Text('${item.averagePricePerUnit}',
                                                            style:
                                                            Styles.listButtonTextStyle),
                                                      ],
                                                    )
                                                  ],
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                        flex: 7,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        }),

                  ],
                )
                    : product_sales_form();
              } else if (state is ProductSalePriceLoadedState) {
                var productList = state.data;

                print('Product List ${productList.length}');

                return productList.isNotEmpty && addSaleProduct == false
                    ? product_sales_list(productList)
                    : product_sales_form();
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : BlocConsumer<ProductSalePriceCubit, ProductSalePriceState>(
            listener: (context, state) {
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ProductSalePriceInitialState) {
                return product_sales_form();
              } else if (state is ProductSalePriceLoadingState) {
                return product_sales_form();
              } else if (state is ProductSalePriceLoadedState) {
                var productList = state.data;
                return productList.isNotEmpty && addSaleProduct == false
                    ? product_sales_list(productList)
                    : product_sales_form();
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error 3'),
                  ),
                );
              }
            },
          );
  }

  Widget product_purchase_form() {
    return Padding(
        padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
        child: Column(
          children: [
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Type of product / service',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      maxLines: null,
                      controller: productPurchaseTypeController,
                      keyboardType: TextInputType.multiline,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Number of Units',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      controller: productPurchaseUnitsController,
                      maxLines: null,
                      keyboardType: TextInputType.number,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Row(
              children: [
                Flexible(
                  flex: 1,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 5, top: 5),
                    child: Container(
                        width: 200,
                        child: Text('Average Price per Service/Unit',
                            style: Styles.cashFlowInputFormHeading)),
                  ),
                ),
                Flexible(
                  flex: 2,
                  child: Padding(
                    padding: const EdgeInsets.only(
                        left: 5, right: 5, top: 5, bottom: 5),
                    child: TextFormField(
                      decoration: Styles.cashFormInputDecoration(''),
                      controller: productPurchasePriceController,
                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                      style: Styles.hintTextStyle,
                      maxLines: null,
                      keyboardType: TextInputType.number,
                      enabled: true,
                      onChanged: (comment) {},
                    ),
                  ),
                ),
              ],
            ),
            Expanded(
              child: Align(
                alignment: Alignment.bottomRight,
                child: Padding(
                  padding: const EdgeInsets.only(bottom: 20, right: 20),
                  child: FloatingActionButton(
                    onPressed: () {
                      var product = ProductPurchase(
                          productPurchaseTypeController.text,
                          double.parse(productPurchaseUnitsController.text),
                          double.parse(productPurchasePriceController.text));

                      blocProductPurchase.addProduct(product);
                      blocProductPurchase.getProductList();
                      productPurchaseTypeController.clear();
                      productPurchaseUnitsController.clear();
                      productPurchasePriceController.clear();

                      addPurchaseProduct = false;
                      setState(() {});
                    },
                    child: Icon(
                      Icons.done,
                      color: ColorResources.WHITE,
                    ),
                    backgroundColor: ColorResources.APP_THEME_COLOR,
                  ),
                ),
              ),
            )
          ],
        ));
  }

  Widget purchase_product_list(List<ProductPurchase> list){
    
    return Stack(
      children: [
        ListView.builder(
            itemCount: list.length,
            itemBuilder: (BuildContext context, int index) {
              var item = list[index];
              return Padding(
                padding: const EdgeInsets.only(
                  left: 16,
                  right: 16,
                  top: 16,
                ),
                child: Container(
                  decoration: BoxDecoration(
                    color: ColorResources.WHITE,
                    border: Border.all(
                        color:
                        ColorResources.LIST_BORDER_WHITE,
                        width: 1),
                    borderRadius:
                    BorderRadius.all(Radius.circular(
                      10,
                    )),
                  ),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            child: Wrap(
                              children: [
                                Padding(
                                  padding:
                                  const EdgeInsets.all(
                                      16.0),
                                  child: Align(
                                    alignment:
                                    Alignment.centerLeft,
                                    child: Column(
                                      crossAxisAlignment:
                                      CrossAxisAlignment
                                          .start,
                                      children: [
                                        Column(
                                          children: [
                                            Row(
                                              children: [
                                                Text(
                                                  'Type of product : ',
                                                  style: Styles
                                                      .listDescHeadingTextStyle,
                                                ),
                                                Text(
                                                    '${item.typeOfProduct}',
                                                    style: Styles
                                                        .listButtonTextStyle),
                                              ],
                                            )
                                          ],
                                        ),
                                        SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            Text(
                                              'Number of units : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle,
                                            ),
                                            Text(
                                                '${item.numberOfUnits}',
                                                style: Styles
                                                    .listButtonTextStyle),
                                          ],
                                        ),
                                        SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            Text(
                                              'Service Prize : ',
                                              style: Styles
                                                  .listDescHeadingTextStyle,
                                            ),
                                            Text(
                                                '${item.pricePerService}',
                                                style: Styles
                                                    .listButtonTextStyle),
                                          ],
                                        )
                                      ],
                                    ),
                                  ),
                                )
                              ],
                            ),
                            flex: 7,
                          ),
                          Flexible(
                            child: ElevatedButton(
                                onPressed: () {
                                  blocProductPurchase
                                      .deletePurchaseProduct(index);
                                  //blocProductSale.getProductList();
                                  setState(() {});
                                },
                                child: Text('Delete')),
                            flex: 2,
                          )
                        ],
                      ),
                    ],
                  ),
                ),
              );
            }),
        Align(
          alignment: Alignment.bottomRight,
          child: Padding(
            padding:
            const EdgeInsets.only(bottom: 20, right: 20),
            child: FloatingActionButton(
              onPressed: () {
                //Navigator.pop(context);
                addPurchaseProduct = true;
                setState(() {});
              },
              child: Icon(Icons.add,
                  color: ColorResources.WHITE),
              backgroundColor: ColorResources.APP_THEME_COLOR,
            ),
          ),
        )
      ],
    );
    
  }

  Widget product_purchase_price() {
    return widget.arguments.isEditable
        ? BlocConsumer<ProductPurchasePrizeCubit, ProductPurchasePrizeState>(
            listener: (context, state) {
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ProductPurchasePrizeInitialState) {
                return SizedBox();
              } else if (state is ProductPurchasePrizeLoadingState) {
                return product_purchase_form();
              } else if (state is ProductPurchasePrizeLoadedFromAPIState) {
                var productList = state.data;

                return productList.isNotEmpty && addPurchaseProduct == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                    left: 16,
                                    right: 16,
                                    top: 16,
                                  ),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Column(
                                                            children: [
                                                              Row(
                                                                children: [
                                                                  Text(
                                                                    'Type of product : ',
                                                                    style: Styles
                                                                        .listDescHeadingTextStyle,
                                                                  ),
                                                                  Text(
                                                                      '${item.typeOfProduct}',
                                                                      style: Styles
                                                                          .listButtonTextStyle),
                                                                ],
                                                              )
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Number of units : ',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.numberOfUnits}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Service Prize : ',
                                                                style: Styles
                                                                    .listDescHeadingTextStyle,
                                                              ),
                                                              Text(
                                                                  '${item.averagePricePerUnit}',
                                                                  style: Styles
                                                                      .listButtonTextStyle),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                         /* Align(
                            alignment: Alignment.bottomRight,
                            child: Padding(
                              padding:
                                  const EdgeInsets.only(bottom: 20, right: 20),
                              child: FloatingActionButton(
                                onPressed: () {
                                  //Navigator.pop(context);
                                  addPurchaseProduct = true;
                                  setState(() {});
                                },
                                child: Icon(Icons.add,
                                    color: ColorResources.WHITE),
                                backgroundColor: ColorResources.APP_THEME_COLOR,
                              ),
                            ),
                          )*/
                        ],
                      )
                    : product_purchase_form();
              } else if (state is ProductPurchasePrizeLoadedState) {
                var productList = state.data;
                return productList.isNotEmpty && addPurchaseProduct == false
                    ? purchase_product_list(productList)
                    : product_purchase_form();
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : BlocConsumer<ProductPurchasePrizeCubit, ProductPurchasePrizeState>(
            listener: (context, state) {
              if (state is ProductSalePriceErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ProductPurchasePrizeInitialState) {
                return product_purchase_form();
              } else if (state is ProductPurchasePrizeLoadingState) {
                return product_purchase_form();
              } else if (state is ProductPurchasePrizeLoadedState) {
                var productList = state.data;
                return productList.isNotEmpty && addPurchaseProduct == false
                    ? purchase_product_list(productList)
                    : product_purchase_form();
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          );
  }

  Widget manufacturing_option_1() {
    return  BlocConsumer<ManufecturingOptionOneCubit,
            ManufecturingOptionOneState>(
            listener: (context, state) {
              print('State Error ${state}');
              if (state is ManufecturingOptionOneErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              print('State Error ${state}');
              if (state is ManufecturingOptionOneCubit) {
                return SizedBox();
              } else if (state is ManufecturingOptionOneLoadingState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneInitialState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneLoadedState) {
                var productList = state.data;
                return productList.isNotEmpty &&
                    addManufacturingOptionOne == false
                    ? Stack(
                  children: [
                    ListView.builder(
                        itemCount: productList.length,
                        itemBuilder: (BuildContext context, int index) {
                          var item = productList[index];
                          return Padding(
                            padding: const EdgeInsets.only(
                                left: 24, right: 24, top: 16, bottom: 16),
                            child: Container(
                              decoration: BoxDecoration(
                                color: ColorResources.WHITE,
                                border: Border.all(
                                    color:
                                    ColorResources.LIST_BORDER_WHITE,
                                    width: 1),
                                borderRadius:
                                BorderRadius.all(Radius.circular(
                                  10,
                                )),
                              ),
                              child: Column(
                                children: [
                                  Row(
                                    children: [
                                      Flexible(
                                        child: Wrap(
                                          children: [
                                            Padding(
                                              padding:
                                              const EdgeInsets.all(
                                                  16.0),
                                              child: Align(
                                                alignment:
                                                Alignment.centerLeft,
                                                child: Column(
                                                  crossAxisAlignment:
                                                  CrossAxisAlignment
                                                      .start,
                                                  children: [
                                                    Column(
                                                      children: [
                                                        Row(
                                                          children: [
                                                            Text(
                                                                'Type of product : '),
                                                            Text(
                                                              '${item.typeOfProduct}',
                                                            ),
                                                          ],
                                                        )
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Number of units : ',
                                                        ),
                                                        Text(
                                                          '${item.numberOfUnits}',
                                                        ),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Average Sale Prize :',
                                                        ),
                                                        Text(
                                                          '${item.averageSalePrize}',
                                                        ),
                                                      ],
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Production cost per unit :',
                                                        ),
                                                        Text(
                                                          '${item.costPerUnit}',
                                                        ),
                                                      ],
                                                    )
                                                  ],
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                        flex: 7,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        }),
                    Align(
                      alignment: Alignment.bottomRight,
                      child: Padding(
                        padding: const EdgeInsets.only(
                            bottom: 20, right: 20),
                        child: FloatingActionButton(
                          onPressed: () {
                            //Navigator.pop(context);
                            addManufacturingOptionOne = true;
                            setState(() {});
                          },
                          child: Icon(Icons.add,
                              color: ColorResources.WHITE),
                          backgroundColor:
                          ColorResources.APP_THEME_COLOR,
                        ),
                      ),
                    )
                  ],
                )
                    : Padding(
                  padding:
                  const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Average Sale Price per Unit',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize
                                            .text),
                                    double.parse(
                                        manufacturingProductionCost
                                            .text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor:
                              ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneFromAPILoadedState) {
                var productList = state.data;
                return productList.isNotEmpty && addManufacturingOptionOne == false
                    ? ListView.builder(
                        itemCount: productList.length,
                        itemBuilder: (BuildContext context, int index) {
                          var item = productList[index];
                          return Padding(
                            padding: const EdgeInsets.only(
                                left: 24, right: 24, top: 16, bottom: 16),
                            child: Container(
                              decoration: BoxDecoration(
                                color: ColorResources.WHITE,
                                border: Border.all(
                                    color:
                                        ColorResources.LIST_BORDER_WHITE,
                                    width: 1),
                                borderRadius:
                                    BorderRadius.all(Radius.circular(
                                  10,
                                )),
                              ),
                              child: Column(
                                children: [
                                  Row(
                                    children: [
                                      Flexible(
                                        child: Wrap(
                                          children: [
                                            Padding(
                                              padding:
                                                  const EdgeInsets.all(
                                                      16.0),
                                              child: Align(
                                                alignment:
                                                    Alignment.centerLeft,
                                                child: Column(
                                                  crossAxisAlignment:
                                                      CrossAxisAlignment
                                                          .start,
                                                  children: [
                                                    Column(
                                                      children: [
                                                        Row(
                                                          children: [
                                                            Text(
                                                                'Type of product : '),
                                                            Text(
                                                              '${item.typeOfProduct}',
                                                            ),
                                                          ],
                                                        )
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Number of units : ',
                                                        ),
                                                        Text(
                                                          '${item.numberOfUnits}',
                                                        ),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Average Sale Prize :',
                                                        ),
                                                        Text(
                                                          '${item.averageSalePricePerUnit}',
                                                        ),
                                                      ],
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Production cost per unit :',
                                                        ),
                                                        Text(
                                                          '${item.productionCostPerUnit}',
                                                        ),
                                                      ],
                                                    )
                                                  ],
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                        flex: 7,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        })
                    : Padding(
                        padding:
                            const EdgeInsets.only(left: 20, top: 20, right: 20),
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Type of product / service',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingTypeOfProduct,
                                      keyboardType: TextInputType.multiline,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Number of Units',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingNumberOfUnits,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text(
                                            'Average Sale Price per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingAverageSalePrize,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Production Cost per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingProductionCost,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Expanded(
                              child: Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      var obj = ManufacturingOptionOne(
                                          manufacturingTypeOfProduct.text,
                                          double.parse(
                                              manufacturingNumberOfUnits.text),
                                          double.parse(
                                              manufacturingAverageSalePrize
                                                  .text),
                                          double.parse(
                                              manufacturingProductionCost
                                                  .text));

                                      manufecturingOptionOneCubit
                                          .addManufacturingOption(obj);
                                      manufecturingOptionOneCubit
                                          .getManufacturingList();
                                      manufacturingTypeOfProduct.clear();
                                      manufacturingNumberOfUnits.clear();
                                      manufacturingAverageSalePrize.clear();
                                      manufacturingProductionCost.clear();

                                      addManufacturingOptionOne = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              ),
                            )
                          ],
                        ),
                      );
              } else {
                // (state is WeatherError)
                print('State Error ${state}');
                return Center(
                  child: Container(
                    child: Text('Network Error 1'),
                  ),
                );
              }
            },
          );

  }



/*  Widget manufacturing_option_1() {
    return widget.arguments.isEditable
        ? BlocConsumer<ManufecturingOptionOneCubit,
            ManufecturingOptionOneState>(
            listener: (context, state) {
              print('State Error ${state}');
              if (state is ManufecturingOptionOneErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              print('State Error ${state}');
              if (state is ManufecturingOptionOneCubit) {
                return SizedBox();
              } else if (state is ManufecturingOptionOneLoadingState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneInitialState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );

              } else if (state is ManufecturingOptionOneLoadedState) {
                var productList = state.data;

                return productList.isNotEmpty &&
                    addManufacturingOptionOne == false
                    ? Stack(
                  children: [
                    ListView.builder(
                        itemCount: productList.length,
                        itemBuilder: (BuildContext context, int index) {
                          var item = productList[index];
                          return Padding(
                            padding: const EdgeInsets.only(
                                left: 24, right: 24, top: 16, bottom: 16),
                            child: Container(
                              decoration: BoxDecoration(
                                color: ColorResources.WHITE,
                                border: Border.all(
                                    color:
                                    ColorResources.LIST_BORDER_WHITE,
                                    width: 1),
                                borderRadius:
                                BorderRadius.all(Radius.circular(
                                  10,
                                )),
                              ),
                              child: Column(
                                children: [
                                  Row(
                                    children: [
                                      Flexible(
                                        child: Wrap(
                                          children: [
                                            Padding(
                                              padding:
                                              const EdgeInsets.all(
                                                  16.0),
                                              child: Align(
                                                alignment:
                                                Alignment.centerLeft,
                                                child: Column(
                                                  crossAxisAlignment:
                                                  CrossAxisAlignment
                                                      .start,
                                                  children: [
                                                    Column(
                                                      children: [
                                                        Row(
                                                          children: [
                                                            Text(
                                                                'Type of product : '),
                                                            Text(
                                                              '${item.typeOfProduct}',
                                                            ),
                                                          ],
                                                        )
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Number of units : ',
                                                        ),
                                                        Text(
                                                          '${item.numberOfUnits}',
                                                        ),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: 10,
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Average Sale Prize :',
                                                        ),
                                                        Text(
                                                          '${item.averageSalePrize}',
                                                        ),
                                                      ],
                                                    ),
                                                    Row(
                                                      children: [
                                                        Text(
                                                          'Production cost per unit :',
                                                        ),
                                                        Text(
                                                          '${item.costPerUnit}',
                                                        ),
                                                      ],
                                                    )
                                                  ],
                                                ),
                                              ),
                                            )
                                          ],
                                        ),
                                        flex: 7,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        }),
                    Expanded(
                      child: Align(
                        alignment: Alignment.bottomRight,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              bottom: 20, right: 20),
                          child: FloatingActionButton(
                            onPressed: () {
                              //Navigator.pop(context);
                              addManufacturingOptionOne = true;
                              setState(() {});
                            },
                            child: Icon(Icons.add,
                                color: ColorResources.WHITE),
                            backgroundColor:
                            ColorResources.APP_THEME_COLOR,
                          ),
                        ),
                      ),
                    )
                  ],
                )
                    : Padding(
                  padding:
                  const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Average Sale Price per Unit',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding:
                              const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles
                                          .cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration:
                                Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding: const EdgeInsets.only(
                                bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize
                                            .text),
                                    double.parse(
                                        manufacturingProductionCost
                                            .text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor:
                              ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneFromAPILoadedState) {
                var productList = state.data;
                return productList.isNotEmpty && addManufacturingOptionOne == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                      left: 24, right: 24, top: 16, bottom: 16),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Column(
                                                            children: [
                                                              Row(
                                                                children: [
                                                                  Text(
                                                                      'Type of product : '),
                                                                  Text(
                                                                    '${item.typeOfProduct}',
                                                                  ),
                                                                ],
                                                              )
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Number of units : ',
                                                              ),
                                                              Text(
                                                                '${item.numberOfUnits}',
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Average Sale Prize :',
                                                              ),
                                                              Text(
                                                                '${item.averageSalePricePerUnit}',
                                                              ),
                                                            ],
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Production cost per unit :',
                                                              ),
                                                              Text(
                                                                '${item.productionCostPerUnit}',
                                                              ),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                          Expanded(
                            child: Align(
                              alignment: Alignment.bottomRight,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    bottom: 20, right: 20),
                                child: FloatingActionButton(
                                  onPressed: () {
                                    //Navigator.pop(context);
                                    addManufacturingOptionOne = true;
                                    setState(() {});
                                  },
                                  child: Icon(Icons.add,
                                      color: ColorResources.WHITE),
                                  backgroundColor:
                                      ColorResources.APP_THEME_COLOR,
                                ),
                              ),
                            ),
                          )
                        ],
                      )
                    : Padding(
                        padding:
                            const EdgeInsets.only(left: 20, top: 20, right: 20),
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Type of product / service',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingTypeOfProduct,
                                      keyboardType: TextInputType.multiline,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Number of Units',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingNumberOfUnits,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text(
                                            'Average Sale Price per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingAverageSalePrize,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Production Cost per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingProductionCost,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Expanded(
                              child: Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      var obj = ManufacturingOptionOne(
                                          manufacturingTypeOfProduct.text,
                                          double.parse(
                                              manufacturingNumberOfUnits.text),
                                          double.parse(
                                              manufacturingAverageSalePrize
                                                  .text),
                                          double.parse(
                                              manufacturingProductionCost
                                                  .text));

                                      manufecturingOptionOneCubit
                                          .addManufacturingOption(obj);
                                      manufecturingOptionOneCubit
                                          .getManufacturingList();
                                      manufacturingTypeOfProduct.clear();
                                      manufacturingNumberOfUnits.clear();
                                      manufacturingAverageSalePrize.clear();
                                      manufacturingProductionCost.clear();

                                      addManufacturingOptionOne = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              ),
                            )
                          ],
                        ),
                      );
              } else {
                // (state is WeatherError)
                print('State Error ${state}');
                return Center(
                  child: Container(
                    child: Text('Network Error 1'),
                  ),
                );
              }
            },
          )
        : BlocConsumer<ManufecturingOptionOneCubit,
            ManufecturingOptionOneState>(
            listener: (context, state) {
              if (state is ManufecturingOptionOneErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ManufecturingOptionOneInitialState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneLoadingState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Type of product / service',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(''),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingTypeOfProduct,
                                keyboardType: TextInputType.multiline,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Number of Units',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingNumberOfUnits,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Average Sale Price per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingAverageSalePrize,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text('Production Cost per Unit',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: manufacturingProductionCost,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Expanded(
                        child: Align(
                          alignment: Alignment.bottomRight,
                          child: Padding(
                            padding:
                                const EdgeInsets.only(bottom: 20, right: 20),
                            child: FloatingActionButton(
                              onPressed: () {
                                // var Manu

                                var obj = ManufacturingOptionOne(
                                    manufacturingTypeOfProduct.text,
                                    double.parse(
                                        manufacturingNumberOfUnits.text),
                                    double.parse(
                                        manufacturingAverageSalePrize.text),
                                    double.parse(
                                        manufacturingProductionCost.text));

                                manufecturingOptionOneCubit
                                    .addManufacturingOption(obj);

                                manufecturingOptionOneCubit
                                    .getManufacturingList();
                                manufacturingTypeOfProduct.clear();
                                manufacturingNumberOfUnits.clear();
                                manufacturingAverageSalePrize.clear();
                                manufacturingProductionCost.clear();

                                addManufacturingOptionOne = false;
                                setState(() {});
                              },
                              child: Icon(
                                Icons.done,
                                color: ColorResources.WHITE,
                              ),
                              backgroundColor: ColorResources.APP_THEME_COLOR,
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneLoadedState) {
                var productList = state.data;

                return productList.isNotEmpty &&
                        addManufacturingOptionOne == false
                    ? Stack(
                        children: [
                          ListView.builder(
                              itemCount: productList.length,
                              itemBuilder: (BuildContext context, int index) {
                                var item = productList[index];
                                return Padding(
                                  padding: const EdgeInsets.only(
                                      left: 24, right: 24, top: 16, bottom: 16),
                                  child: Container(
                                    decoration: BoxDecoration(
                                      color: ColorResources.WHITE,
                                      border: Border.all(
                                          color:
                                              ColorResources.LIST_BORDER_WHITE,
                                          width: 1),
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(
                                        10,
                                      )),
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          children: [
                                            Flexible(
                                              child: Wrap(
                                                children: [
                                                  Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            16.0),
                                                    child: Align(
                                                      alignment:
                                                          Alignment.centerLeft,
                                                      child: Column(
                                                        crossAxisAlignment:
                                                            CrossAxisAlignment
                                                                .start,
                                                        children: [
                                                          Column(
                                                            children: [
                                                              Row(
                                                                children: [
                                                                  Text(
                                                                      'Type of product : '),
                                                                  Text(
                                                                    '${item.typeOfProduct}',
                                                                  ),
                                                                ],
                                                              )
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Number of units : ',
                                                              ),
                                                              Text(
                                                                '${item.numberOfUnits}',
                                                              ),
                                                            ],
                                                          ),
                                                          SizedBox(
                                                            height: 10,
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Average Sale Prize :',
                                                              ),
                                                              Text(
                                                                '${item.averageSalePrize}',
                                                              ),
                                                            ],
                                                          ),
                                                          Row(
                                                            children: [
                                                              Text(
                                                                'Production cost per unit :',
                                                              ),
                                                              Text(
                                                                '${item.costPerUnit}',
                                                              ),
                                                            ],
                                                          )
                                                        ],
                                                      ),
                                                    ),
                                                  )
                                                ],
                                              ),
                                              flex: 7,
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              }),
                          Expanded(
                            child: Align(
                              alignment: Alignment.bottomRight,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    bottom: 20, right: 20),
                                child: FloatingActionButton(
                                  onPressed: () {
                                    //Navigator.pop(context);
                                    addManufacturingOptionOne = true;
                                    setState(() {});
                                  },
                                  child: Icon(Icons.add,
                                      color: ColorResources.WHITE),
                                  backgroundColor:
                                      ColorResources.APP_THEME_COLOR,
                                ),
                              ),
                            ),
                          )
                        ],
                      )
                    : Padding(
                        padding:
                            const EdgeInsets.only(left: 20, top: 20, right: 20),
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Type of product / service',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingTypeOfProduct,
                                      keyboardType: TextInputType.multiline,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Number of Units',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingNumberOfUnits,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text(
                                            'Average Sale Price per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingAverageSalePrize,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              children: [
                                Flexible(
                                  flex: 1,
                                  child: Padding(
                                    padding:
                                        const EdgeInsets.only(left: 5, top: 5),
                                    child: Container(
                                        width: 200,
                                        child: Text('Production Cost per Unit',
                                            style: Styles
                                                .cashFlowInputFormHeading)),
                                  ),
                                ),
                                Flexible(
                                  flex: 2,
                                  child: Padding(
                                    padding: const EdgeInsets.only(
                                        left: 5, right: 5, top: 5, bottom: 5),
                                    child: TextFormField(
                                      decoration:
                                          Styles.cashFormInputDecoration(
                                              'Total Amount (Tk.)'),
                                      cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                      style: Styles.hintTextStyle,
                                      maxLines: null,
                                      controller: manufacturingProductionCost,
                                      keyboardType: TextInputType.number,
                                      enabled: true,
                                      onChanged: (comment) {},
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Expanded(
                              child: Align(
                                alignment: Alignment.bottomRight,
                                child: Padding(
                                  padding: const EdgeInsets.only(
                                      bottom: 20, right: 20),
                                  child: FloatingActionButton(
                                    onPressed: () {
                                      // var Manu

                                      var obj = ManufacturingOptionOne(
                                          manufacturingTypeOfProduct.text,
                                          double.parse(
                                              manufacturingNumberOfUnits.text),
                                          double.parse(
                                              manufacturingAverageSalePrize
                                                  .text),
                                          double.parse(
                                              manufacturingProductionCost
                                                  .text));

                                      manufecturingOptionOneCubit
                                          .addManufacturingOption(obj);

                                      manufecturingOptionOneCubit
                                          .getManufacturingList();
                                      manufacturingTypeOfProduct.clear();
                                      manufacturingNumberOfUnits.clear();
                                      manufacturingAverageSalePrize.clear();
                                      manufacturingProductionCost.clear();

                                      addManufacturingOptionOne = false;
                                      setState(() {});
                                    },
                                    child: Icon(
                                      Icons.done,
                                      color: ColorResources.WHITE,
                                    ),
                                    backgroundColor:
                                        ColorResources.APP_THEME_COLOR,
                                  ),
                                ),
                              ),
                            )
                          ],
                        ),
                      );
              } else {
                // (state is WeatherError)
                //print(object)
                return Center(
                  child: Container(
                    child: Text('Network Error 1'),
                  ),
                );
              }
            },
          );
  }*/ //old One

  Widget manufacturing_option_2() {
    return widget.arguments.isEditable
        ? BlocConsumer<ManufacturingOptionTwoCubit,
            ManufacturingOptionTwoState>(
            listener: (context, state) {
              if (state is ManufecturingOptionOneErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is ManufacturingOptionTwoCubit) {
                return SizedBox();
              } else if (state is ManufacturingOptionTwoLoadingState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Material cost (Direct + Consumables)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: materialCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Other cash cost - labor, overhead (electricty, rent, transport)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: otherCashCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Overall Average Sales Volume Per Month',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: averageSaleVolume,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                );
              } else if (state is ManufacturingOptionTwoInitialState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Material cost (Direct + Consumables)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: materialCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Other cash cost - labor, overhead (electricty, rent, transport)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: otherCashCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Overall Average Sales Volume Per Month',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: averageSaleVolume,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionTwoFromAPILoadedState) {
                materialCost.text = state.data.materialCost.toString();
                otherCashCost.text = state.data.otherCashCost.toString();
                averageSaleVolume.text =
                    state.data.averageSalesPerMonth.toString();
                debtBurdenManufacturing.text = state.data.debtBurden.toString();
                debtBurdenPreviousLoan.text =
                    state.data.debtBurdenPreviousLoan.toString();
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Material cost (Direct + Consumables)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: materialCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Other cash cost - labor, overhead (electricty, rent, transport)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: otherCashCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Overall Average Sales Volume Per Month',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: averageSaleVolume,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                );
              } else if (state is ManufecturingOptionOneErrorState) {
                return Padding(
                  padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
                  child: Column(
                    children: [
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Material cost (Direct + Consumables)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: materialCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Other cash cost - labor, overhead (electricty, rent, transport)',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                keyboardType: TextInputType.number,
                                controller: otherCashCost,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          Flexible(
                            flex: 1,
                            child: Padding(
                              padding: const EdgeInsets.only(left: 5, top: 5),
                              child: Container(
                                  width: 200,
                                  child: Text(
                                      'Overall Average Sales Volume Per Month',
                                      style: Styles.cashFlowInputFormHeading)),
                            ),
                          ),
                          Flexible(
                            flex: 2,
                            child: Padding(
                              padding: const EdgeInsets.only(
                                  left: 5, right: 5, top: 5, bottom: 5),
                              child: TextFormField(
                                decoration: Styles.cashFormInputDecoration(
                                    'Total Amount (Tk.)'),
                                cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                style: Styles.hintTextStyle,
                                maxLines: null,
                                controller: averageSaleVolume,
                                keyboardType: TextInputType.number,
                                enabled: true,
                                onChanged: (comment) {},
                              ),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                );
              } else {
                // (state is WeatherError)
                //print(object)
                return Center(
                  child: Container(
                    child: Text('Network Error 1'),
                  ),
                );
              }
            },
          )
        : Padding(
            padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
            child: Column(
              children: [
                Row(
                  children: [
                    Flexible(
                      flex: 1,
                      child: Padding(
                        padding: const EdgeInsets.only(left: 5, top: 5),
                        child: Container(
                            width: 200,
                            child: Text('Material cost (Direct + Consumables)',
                                style: Styles.cashFlowInputFormHeading)),
                      ),
                    ),
                    Flexible(
                      flex: 2,
                      child: Padding(
                        padding: const EdgeInsets.only(
                            left: 5, right: 5, top: 5, bottom: 5),
                        child: TextFormField(
                          decoration: Styles.cashFormInputDecoration(
                              'Total Amount (Tk.)'),
                          cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                          style: Styles.hintTextStyle,
                          maxLines: null,
                          keyboardType: TextInputType.number,
                          controller: materialCost,
                          enabled: true,
                          onChanged: (comment) {},
                        ),
                      ),
                    ),
                  ],
                ),
                Row(
                  children: [
                    Flexible(
                      flex: 1,
                      child: Padding(
                        padding: const EdgeInsets.only(left: 5, top: 5),
                        child: Container(
                            width: 200,
                            child: Text(
                                'Other cash cost - labor, overhead (electricty, rent, transport)',
                                style: Styles.cashFlowInputFormHeading)),
                      ),
                    ),
                    Flexible(
                      flex: 2,
                      child: Padding(
                        padding: const EdgeInsets.only(
                            left: 5, right: 5, top: 5, bottom: 5),
                        child: TextFormField(
                          decoration: Styles.cashFormInputDecoration(
                              'Total Amount (Tk.)'),
                          cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                          style: Styles.hintTextStyle,
                          maxLines: null,
                          keyboardType: TextInputType.number,
                          controller: otherCashCost,
                          enabled: true,
                          onChanged: (comment) {},
                        ),
                      ),
                    ),
                  ],
                ),
                Row(
                  children: [
                    Flexible(
                      flex: 1,
                      child: Padding(
                        padding: const EdgeInsets.only(left: 5, top: 5),
                        child: Container(
                            width: 200,
                            child: Text(
                                'Overall Average Sales Volume Per Month',
                                style: Styles.cashFlowInputFormHeading)),
                      ),
                    ),
                    Flexible(
                      flex: 2,
                      child: Padding(
                        padding: const EdgeInsets.only(
                            left: 5, right: 5, top: 5, bottom: 5),
                        child: TextFormField(
                          decoration: Styles.cashFormInputDecoration(
                              'Total Amount (Tk.)'),
                          cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                          style: Styles.hintTextStyle,
                          maxLines: null,
                          controller: averageSaleVolume,
                          keyboardType: TextInputType.number,
                          enabled: true,
                          onChanged: (comment) {},
                        ),
                      ),
                    ),
                  ],
                ),
              ],
            ),
          );
  }

  Widget qualitative_aspects() {
    return widget.arguments.isEditable
        ? BlocConsumer<QualitativeAspectsCubit, QualitativeAspectsState>(
            listener: (context, state) {
              if (state is CustomerListErrorState) {
                final snackBar = SnackBar(
                  content: Text(Languages.of(context)!.internetErrorText),
                  backgroundColor: Colors.red,
                );
                ScaffoldMessenger.of(context).showSnackBar(snackBar);
              }
            },
            buildWhen: (previous, current) => previous != current,
            builder: (context, state) {
              if (state is QualitativeAspectsInitialState) {
                return Center(
                  child: CircularProgressIndicator(),
                );
              } else if (state is QualitativeAspectsLoadingState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding:
                        const EdgeInsets.only(left: 20, top: 20, right: 20),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Promoter/Entepreneur ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: promoter,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Business Activity ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: businessActivity,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Market and Demand',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',
                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  controller: marketNDemand,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Recommendation',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',

                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: recommendation,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                );
              } else if (state is QualitativeAspectsLoadedState) {
                if (state.data.isNotEmpty) {
                  promoter.text = state.data[0].promoter ?? '';
                  businessActivity.text = state.data[0].businessActivity ?? '';
                  marketNDemand.text = state.data[0].marketAndDemand ?? '';
                  recommendation.text = state.data[0].recommendation ?? '';
                }

                return SingleChildScrollView(
                  child: Padding(
                    padding:
                        const EdgeInsets.only(left: 20, top: 20, right: 20),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Promoter/Entepreneur ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: promoter,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Business Activity ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: businessActivity,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Market and Demand',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',
                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  controller: marketNDemand,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Recommendation',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',

                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: recommendation,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                );
              } else if (state is QualitativeAspectsErrorState) {
                return SingleChildScrollView(
                  child: Padding(
                    padding:
                        const EdgeInsets.only(left: 20, top: 20, right: 20),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Promoter/Entepreneur ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: promoter,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Business Activity ',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration:
                                      Styles.cashFormInputDecoration(''),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: businessActivity,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Market and Demand',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',
                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  enabled: true,
                                  controller: marketNDemand,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                        Row(
                          children: [
                            Flexible(
                              flex: 1,
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5, top: 5),
                                child: Container(
                                    width: 200,
                                    child: Text('Recommendation',
                                        style:
                                            Styles.cashFlowInputFormHeading)),
                              ),
                            ),
                            Flexible(
                              flex: 2,
                              child: Padding(
                                padding: const EdgeInsets.only(
                                    left: 5, right: 5, top: 5, bottom: 5),
                                child: TextFormField(
                                  decoration: InputDecoration(
                                      filled: true,
                                      fillColor:
                                          ColorResources.TEXT_FIELD_COLOR,
                                      border: OutlineInputBorder(
                                          borderRadius:
                                              BorderRadius.circular(8),
                                          borderSide: BorderSide(
                                              color: ColorResources
                                                  .APP_THEME_COLOR,
                                              style: BorderStyle.solid,
                                              width: 2)),
                                      enabledBorder: const OutlineInputBorder(
                                        borderSide: const BorderSide(
                                            color: ColorResources
                                                .TEXT_FIELD_BORDER_COLOR,
                                            width: 0.0),
                                      ),
                                      //hintText: 'মন্তব্য',

                                      //label: Text('Total Amount (Tk.)'),
                                      // icon: Icon(Icons.person),
                                      contentPadding: EdgeInsets.all(20),
                                      hintStyle: TextStyle(
                                          color: ColorResources.GREY_SEVENTY)),
                                  cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                                  style: Styles.hintTextStyle,
                                  maxLines: 10,
                                  keyboardType: TextInputType.multiline,
                                  controller: recommendation,
                                  enabled: true,
                                  onChanged: (comment) {},
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                );
              } else {
                // (state is WeatherError)
                return Center(
                  child: Container(
                    child: Text('Network Error'),
                  ),
                );
              }
            },
          )
        : SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.only(left: 20, top: 20, right: 20),
              child: Column(
                children: [
                  Row(
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.only(left: 5, top: 5),
                          child: Container(
                              width: 200,
                              child: Text('Promoter/Entepreneur ',
                                  style: Styles.cashFlowInputFormHeading)),
                        ),
                      ),
                      Flexible(
                        flex: 2,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              left: 5, right: 5, top: 5, bottom: 5),
                          child: TextFormField(
                            decoration: Styles.cashFormInputDecoration(''),
                            cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                            style: Styles.hintTextStyle,
                            maxLines: 10,
                            keyboardType: TextInputType.multiline,
                            controller: promoter,
                            enabled: true,
                            onChanged: (comment) {},
                          ),
                        ),
                      ),
                    ],
                  ),
                  Row(
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.only(left: 5, top: 5),
                          child: Container(
                              width: 200,
                              child: Text('Business Activity ',
                                  style: Styles.cashFlowInputFormHeading)),
                        ),
                      ),
                      Flexible(
                        flex: 2,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              left: 5, right: 5, top: 5, bottom: 5),
                          child: TextFormField(
                            decoration: Styles.cashFormInputDecoration(''),
                            cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                            style: Styles.hintTextStyle,
                            maxLines: 10,
                            keyboardType: TextInputType.multiline,
                            controller: businessActivity,
                            enabled: true,
                            onChanged: (comment) {},
                          ),
                        ),
                      ),
                    ],
                  ),
                  Row(
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.only(left: 5, top: 5),
                          child: Container(
                              width: 200,
                              child: Text('Market and Demand',
                                  style: Styles.cashFlowInputFormHeading)),
                        ),
                      ),
                      Flexible(
                        flex: 2,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              left: 5, right: 5, top: 5, bottom: 5),
                          child: TextFormField(
                            decoration: InputDecoration(
                                filled: true,
                                fillColor: ColorResources.TEXT_FIELD_COLOR,
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(8),
                                    borderSide: BorderSide(
                                        color: ColorResources.APP_THEME_COLOR,
                                        style: BorderStyle.solid,
                                        width: 2)),
                                enabledBorder: const OutlineInputBorder(
                                  borderSide: const BorderSide(
                                      color: ColorResources
                                          .TEXT_FIELD_BORDER_COLOR,
                                      width: 0.0),
                                ),
                                //hintText: 'মন্তব্য',
                                //label: Text('Total Amount (Tk.)'),
                                // icon: Icon(Icons.person),
                                contentPadding: EdgeInsets.all(20),
                                hintStyle: TextStyle(
                                    color: ColorResources.GREY_SEVENTY)),
                            cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                            style: Styles.hintTextStyle,
                            maxLines: 10,
                            keyboardType: TextInputType.multiline,
                            enabled: true,
                            controller: marketNDemand,
                            onChanged: (comment) {},
                          ),
                        ),
                      ),
                    ],
                  ),
                  Row(
                    children: [
                      Flexible(
                        flex: 1,
                        child: Padding(
                          padding: const EdgeInsets.only(left: 5, top: 5),
                          child: Container(
                              width: 200,
                              child: Text('Recommendation',
                                  style: Styles.cashFlowInputFormHeading)),
                        ),
                      ),
                      Flexible(
                        flex: 2,
                        child: Padding(
                          padding: const EdgeInsets.only(
                              left: 5, right: 5, top: 5, bottom: 5),
                          child: TextFormField(
                            decoration: InputDecoration(
                                filled: true,
                                fillColor: ColorResources.TEXT_FIELD_COLOR,
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(8),
                                    borderSide: BorderSide(
                                        color: ColorResources.APP_THEME_COLOR,
                                        style: BorderStyle.solid,
                                        width: 2)),
                                enabledBorder: const OutlineInputBorder(
                                  borderSide: const BorderSide(
                                      color: ColorResources
                                          .TEXT_FIELD_BORDER_COLOR,
                                      width: 0.0),
                                ),
                                //hintText: 'মন্তব্য',

                                //label: Text('Total Amount (Tk.)'),
                                // icon: Icon(Icons.person),
                                contentPadding: EdgeInsets.all(20),
                                hintStyle: TextStyle(
                                    color: ColorResources.GREY_SEVENTY)),
                            cursorColor: Color.fromRGBO(0, 0, 0, 0.1),
                            style: Styles.hintTextStyle,
                            maxLines: 10,
                            keyboardType: TextInputType.multiline,
                            controller: recommendation,
                            enabled: true,
                            onChanged: (comment) {},
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          );
  }

  void setCustomerInformation(int customerID) {
    // print('CustomerID in setCustomerInformation $customerID ');

    if (tabController.index < titles.length - 1) {
      if (tabController.index == 0) {
        SalesCashbook cashbook = SalesCashbook();

        cashbook.customerId = customerID;
        cashbook.firstMonth5th = double.parse(
            salesMemolastMonthFifth.text.isNotEmpty
                ? salesMemolastMonthFifth.text
                : '0');
        cashbook.firstMonth10th = double.parse(
            salesMemolastMonthTenth.text.isNotEmpty
                ? salesMemolastMonthTenth.text
                : '0');
        cashbook.firstMonth15th = double.parse(
            salesMemolastMonthFifteen.text.isNotEmpty
                ? salesMemolastMonthFifteen.text
                : '0');
        cashbook.firstMonth20th = double.parse(
            salesMemolastMonthTwenty.text.isNotEmpty
                ? salesMemolastMonthTwenty.text
                : '0');
        cashbook.firstMonth25th = double.parse(
            salesMemolastMonthTwentyFive.text.isNotEmpty
                ? salesMemolastMonthTwentyFive.text
                : '0');
        cashbook.firstMonth30th = double.parse(
            salesMemolastMonthThirty.text.isNotEmpty
                ? salesMemolastMonthThirty.text
                : '0');

        cashbook.twoMonth5th = double.parse(
            salesMemotwoMonthBackFifth.text.isNotEmpty
                ? salesMemotwoMonthBackFifth.text
                : '0');
        cashbook.twoMonth10th = double.parse(
            salesMemotwoMonthBackTenth.text.isNotEmpty
                ? salesMemotwoMonthBackTenth.text
                : '0');
        cashbook.twoMonth15th = double.parse(
            salesMemotwoMonthBackFifteen.text.isNotEmpty
                ? salesMemotwoMonthBackFifteen.text
                : '0');
        cashbook.twoMonth20th = double.parse(
            salesMemotwoMonthBackTwenty.text.isNotEmpty
                ? salesMemotwoMonthBackTwenty.text
                : '0');
        cashbook.twoMonth25th = double.parse(
            salesMemotwoMonthBackTwentyFive.text.isNotEmpty
                ? salesMemotwoMonthBackTwentyFive.text
                : '0');
        cashbook.twoMonth30th = double.parse(
            salesMemotwoMonthBackThirty.text.isNotEmpty
                ? salesMemotwoMonthBackThirty.text
                : '0');

        cashbook.threeMonth5th = double.parse(
            salesMemothreeMonthBackFifth.text.isNotEmpty
                ? salesMemothreeMonthBackFifth.text
                : '0');
        cashbook.threeMonth10th = double.parse(
            salesMemothreeMonthBackTenth.text.isNotEmpty
                ? salesMemothreeMonthBackTenth.text
                : '0');
        cashbook.threeMonth15th = double.parse(
            salesMemothreeMonthBackFifteen.text.isNotEmpty
                ? salesMemothreeMonthBackFifteen.text
                : '0');
        cashbook.threeMonth20th = double.parse(
            salesMemothreeMonthBackTwenty.text.isNotEmpty
                ? salesMemothreeMonthBackTwenty.text
                : '0');
        cashbook.threeMonth25th = double.parse(
            salesMemothreeMonthBackTwentyFive.text.isNotEmpty
                ? salesMemothreeMonthBackTwentyFive.text
                : '0');
        cashbook.threeMonth30th = double.parse(
            salesMemothreeMonthBackThirty.text.isNotEmpty
                ? salesMemothreeMonthBackThirty.text
                : '0');

        repository.setSalesCashbook(cashbook).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 1) {
        PurchaseCashBook cashbook = PurchaseCashBook();

        cashbook.customerId = customerID;
        cashbook.firstMonth5th = double.parse(
            purchaselastMonthFifth.text.isNotEmpty
                ? purchaselastMonthFifth.text
                : '0');
        cashbook.firstMonth15th = double.parse(
            purchasetwoMonthBackFifteen.text.isNotEmpty
                ? purchasetwoMonthBackFifteen.text
                : '0');
        cashbook.firstMonth25th = double.parse(
            purchaselastMonthTwentyFive.text.isNotEmpty
                ? purchaselastMonthTwentyFive.text
                : '0');

        cashbook.twoMonth5th = double.parse(
            purchasetwoMonthBackFifth.text.isNotEmpty
                ? purchasetwoMonthBackFifth.text
                : '0');
        cashbook.twoMonth15th = double.parse(
            purchasetwoMonthBackFifteen.text.isNotEmpty
                ? purchasetwoMonthBackFifteen.text
                : '0');
        cashbook.twoMonth25th = double.parse(
            purchasetwoMonthBackTwentyFive.text.isNotEmpty
                ? purchasetwoMonthBackTwentyFive.text
                : '0');

        cashbook.threeMonth5th = double.parse(
            purchasethreeMonthBackFifth.text.isNotEmpty
                ? purchasethreeMonthBackFifth.text
                : '0');
        cashbook.threeMonth15th = double.parse(
            purchasethreeMonthBackFifteen.text.isNotEmpty
                ? purchasethreeMonthBackFifteen.text
                : '0');
        cashbook.threeMonth25th = double.parse(
            purchasethreeMonthBackTwentyFive.text.isNotEmpty
                ? purchasethreeMonthBackTwentyFive.text
                : '0');

        repository.setPurchaseCashbook(cashbook).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 2) {
        BankBalance cashbook = BankBalance();

        cashbook.customerId = customerID;
        cashbook.firstMonth5th = double.parse(
            banklastMonthFifth.text.isNotEmpty ? banklastMonthFifth.text : '0');
        cashbook.firstMonth15th = double.parse(
            banklastMonthFifteen.text.isNotEmpty
                ? banklastMonthFifteen.text
                : '0');
        cashbook.firstMonth25th = double.parse(
            banklastMonthTwentyFive.text.isNotEmpty
                ? banklastMonthTwentyFive.text
                : '0');

        cashbook.twoMonth5th = double.parse(
            banktwoMonthBackFifth.text.isNotEmpty
                ? banktwoMonthBackFifth.text
                : '0');
        cashbook.twoMonth15th = double.parse(
            banktwoMonthBackFifteen.text.isNotEmpty
                ? banktwoMonthBackFifteen.text
                : '0');
        cashbook.twoMonth25th = double.parse(
            banktwoMonthBackTwentyFive.text.isNotEmpty
                ? banktwoMonthBackTwentyFive.text
                : '0');

        cashbook.threeMonth5th = double.parse(
            bankthreeMonthBackFifth.text.isNotEmpty
                ? bankthreeMonthBackFifth.text
                : '0');
        cashbook.threeMonth15th = double.parse(
            bankthreeMonthBackFifteen.text.isNotEmpty
                ? bankthreeMonthBackFifteen.text
                : '0');
        cashbook.threeMonth25th = double.parse(
            bankthreeMonthBackTwentyFive.text.isNotEmpty
                ? bankthreeMonthBackTwentyFive.text
                : '0');

        cashbook.fourthMonth5th = double.parse(
            bankfourMonthFifth.text.isNotEmpty ? bankfourMonthFifth.text : '0');
        cashbook.fourthMonth15th = double.parse(
            bankfourMonthFifteen.text.isNotEmpty
                ? bankfourMonthFifteen.text
                : '0');
        cashbook.fourthMonth25th = double.parse(
            bankfourMonthTwentyFive.text.isNotEmpty
                ? bankfourMonthTwentyFive.text
                : '0');

        cashbook.fifthMonth5th = double.parse(
            bankfiveMonthBackFifth.text.isNotEmpty
                ? bankfiveMonthBackFifth.text
                : '0');
        cashbook.fifthMonth15th = double.parse(
            bankfiveMonthBackFifteen.text.isNotEmpty
                ? bankfiveMonthBackFifteen.text
                : '0');
        cashbook.fifthMonth25th = double.parse(
            bankfiveMonthBackTwentyFive.text.isNotEmpty
                ? bankfiveMonthBackTwentyFive.text
                : '0');

        cashbook.sixthMonth5th = double.parse(
            banksixMonthBackFifth.text.isNotEmpty
                ? banksixMonthBackFifth.text
                : '0');
        cashbook.sixthMonth15th = double.parse(
            banksixMonthBackFifteen.text.isNotEmpty
                ? banksixMonthBackFifteen.text
                : '0');
        cashbook.sixthMonth25th = double.parse(
            banksixMonthBackTwentyFive.text.isNotEmpty
                ? banksixMonthBackTwentyFive.text
                : '0');
        cashbook.averageBankBalancePrevious = double.parse(
            averagebBankBalancePrevious.text.isNotEmpty
                ? averagebBankBalancePrevious.text
                : '0');

        repository.setBankBalance(cashbook).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 3) {
        //print('tabController.index in condition');

        SalesDetails Sales = SalesDetails();

        Sales.customerId = customerID;
        Sales.closingDayInWeek = double.parse(
            salesClosedInWeek.text.isNotEmpty ? salesClosedInWeek.text : '0');
        Sales.workingDaysInMonth = int.parse(
            salesNoOfDaysWorkingInMonth.text.isNotEmpty
                ? salesNoOfDaysWorkingInMonth.text
                : '0');
        Sales.salesDaily =
            double.parse(salesDaily.text.isNotEmpty ? salesDaily.text : '0');

        Sales.salesWeekly =
            double.parse(salesWeekly.text.isNotEmpty ? salesWeekly.text : '0');
        Sales.salesMonthly = double.parse(
            salesMonthly.text.isNotEmpty ? salesMonthly.text : '0');
        Sales.monthPreviousLoan = double.parse(
            salesMonthlyPrevious.text.isNotEmpty
                ? salesMonthlyPrevious.text
                : '0');

        Sales.lowMonth = double.parse(
            salesLowMonthCount.text.isNotEmpty ? salesLowMonthCount.text : '0');
        Sales.low = double.parse(
            salesLowAmount.text.isNotEmpty ? salesLowAmount.text : '0');

        Sales.highMonth = double.parse(salesHighMonthCount.text.isNotEmpty
            ? salesHighMonthCount.text
            : '0');
        Sales.high = double.parse(
            salesHighAmount.text.isNotEmpty ? salesHighAmount.text : '0');

        Sales.normal = double.parse(
            salesNormalAmount.text.isNotEmpty ? salesNormalAmount.text : '0');
        Sales.normalMonth = double.parse(salesNormalMonthCount.text.isNotEmpty
            ? salesNormalMonthCount.text
            : '0');
        Sales.debtors = double.parse(
            salesDebtors.text.isNotEmpty ? salesDebtors.text : '0');

        Sales.debtorsPreviousLoan = double.parse(
            salesDebtorsPreviousLoan.text.isNotEmpty
                ? salesDebtorsPreviousLoan.text
                : '0');
        Sales.monthlySalesGrowthPostFunding = double.parse(
            salesGrowthPostFunding.text.isNotEmpty
                ? salesGrowthPostFunding.text
                : '0');

        Sales.month = 1;
        Sales.weeks = 4;

        repository.setSales(Sales).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 4) {
        PurchaseDetails purchase = PurchaseDetails();

        purchase.customerId = customerID;
        purchase.daily = double.parse(
            purchaseDaily.text.isNotEmpty ? purchaseDaily.text : '0');
        purchase.weekly = double.parse(
            purchaseWeekly.text.isNotEmpty ? purchaseWeekly.text : '0');
        purchase.monthly = double.parse(
            purchaseMonthly.text.isNotEmpty ? purchaseMonthly.text : '0');

        purchase.monthlyPreviousLoan = double.parse(
            purchaseMonthlyPreviousLoan.text.isNotEmpty
                ? purchaseMonthlyPreviousLoan.text
                : '0');
        purchase.creditors = double.parse(
            purchaseCreditors.text.isNotEmpty ? purchaseCreditors.text : '0');
        purchase.creditorsPreviousLoan = double.parse(
            purchaseCreditorsPreviousLoan.text.isNotEmpty
                ? purchaseCreditorsPreviousLoan.text
                : '0');

        repository.setPurchase(purchase).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 5) {
        StockDetails stock = StockDetails();

        stock.customerId = customerID;
        stock.finishedGoods = double.parse(
            stockFinishedGood.text.isNotEmpty ? stockFinishedGood.text : '0');
        stock.finishedGoodsPreviousLoan = double.parse(
            stockFinishedGoodPreviousLoan.text.isNotEmpty
                ? stockFinishedGoodPreviousLoan.text
                : '0');
        stock.rawMaterialPreviousLoan = double.parse(
            stockRawMaterial.text.isNotEmpty ? stockRawMaterial.text : '0');
        stock.rawMaterialPreviousLoan = double.parse(
            stockRawMaterialPreviousLoan.text.isNotEmpty
                ? stockRawMaterialPreviousLoan.text
                : '0');

        repository.setStock(stock).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 6) {
        BusinessExpenseDetails monthlyBusinessExpense =
            BusinessExpenseDetails();

        monthlyBusinessExpense.customerId = customerID;
        monthlyBusinessExpense.rent = double.parse(
            businessFactoryRent.text.isNotEmpty
                ? businessFactoryRent.text
                : '0');
        monthlyBusinessExpense.electricity = double.parse(
            businessElectricity.text.isNotEmpty
                ? businessElectricity.text
                : '0');
        monthlyBusinessExpense.staffSalary = double.parse(
            businessStaffSalary.text.isNotEmpty
                ? businessStaffSalary.text
                : '0');
        monthlyBusinessExpense.telephoneMobileInternet = double.parse(
            businessMobileInternet.text.isNotEmpty
                ? businessMobileInternet.text
                : '0');

        monthlyBusinessExpense.transport = double.parse(
            businessTransportCost.text.isNotEmpty
                ? businessTransportCost.text
                : '0');
        monthlyBusinessExpense.gasAndWater = double.parse(
            businessGasNWater.text.isNotEmpty ? businessGasNWater.text : '0');
        monthlyBusinessExpense.maintenance = double.parse(
            businessRepairNMaintenance.text.isNotEmpty
                ? businessRepairNMaintenance.text
                : '0');
        monthlyBusinessExpense.dieselForGenerator = double.parse(
            businessDieselForGenerator.text.isNotEmpty
                ? businessDieselForGenerator.text
                : '0');

        monthlyBusinessExpense.marketing = double.parse(
            businessMarketing.text.isNotEmpty ? businessMarketing.text : '0');
        monthlyBusinessExpense.labourExpense = double.parse(
            businessLabourExpense.text.isNotEmpty
                ? businessLabourExpense.text
                : '0');
        monthlyBusinessExpense.societyBillSecurity = double.parse(
            businessBillNSecurity.text.isNotEmpty
                ? businessBillNSecurity.text
                : '0');

        monthlyBusinessExpense.tax =
            double.parse(businessTax.text.isNotEmpty ? businessTax.text : '0');
        monthlyBusinessExpense.entertainment = double.parse(
            businessEntertainment.text.isNotEmpty
                ? businessEntertainment.text
                : '0');
        monthlyBusinessExpense.otherBusinessExpense = double.parse(
            businessOtherBusinessExpense.text.isNotEmpty
                ? businessOtherBusinessExpense.text
                : '0');

        //previous
        monthlyBusinessExpense.rentPreviousLoan = double.parse(
            businessFactoryRentPreviousLoan.text.isNotEmpty
                ? businessFactoryRentPreviousLoan.text
                : '0');
        monthlyBusinessExpense.electricityPreviousLoan = double.parse(
            businessElectricityPreviousLoan.text.isNotEmpty
                ? businessElectricityPreviousLoan.text
                : '0');
        monthlyBusinessExpense.staffSalaryPreviousLoan = double.parse(
            businessStaffSalaryPreviousLoan.text.isNotEmpty
                ? businessStaffSalaryPreviousLoan.text
                : '0');
        monthlyBusinessExpense.telMobileInterPrevLoan = double.parse(
            businessMobileInternetPreviousLoan.text.isNotEmpty
                ? businessMobileInternetPreviousLoan.text
                : '0');

        monthlyBusinessExpense.transportPreviousLoan = double.parse(
            businessTransportCostPreviousLoan.text.isNotEmpty
                ? businessTransportCostPreviousLoan.text
                : '0');
        monthlyBusinessExpense.gasAndWaterPreviousLoan = double.parse(
            businessGasNWaterPreviousLoan.text.isNotEmpty
                ? businessGasNWaterPreviousLoan.text
                : '0');
        monthlyBusinessExpense.maintenancePreviousLoan = double.parse(
            businessRepairNMaintenancePreviousLoan.text.isNotEmpty
                ? businessRepairNMaintenancePreviousLoan.text
                : '0');
        monthlyBusinessExpense.dieselForGeneratorPrevLoan = double.parse(
            businessDieselForGeneratorPreviousLoan.text.isNotEmpty
                ? businessDieselForGeneratorPreviousLoan.text
                : '0');

        monthlyBusinessExpense.marketingPreviousLoan = double.parse(
            businessMarketingPreviousLoan.text.isNotEmpty
                ? businessMarketingPreviousLoan.text
                : '0');
        monthlyBusinessExpense.labourExpensePreviousLoan = double.parse(
            businessLabourExpensePreviousLoan.text.isNotEmpty
                ? businessLabourExpensePreviousLoan.text
                : '0');
        monthlyBusinessExpense.societyBillSecurityPrevLoan = double.parse(
            businessBillNSecurityPreviousLoan.text.isNotEmpty
                ? businessBillNSecurityPreviousLoan.text
                : '0');

        monthlyBusinessExpense.taxPrevLoan = double.parse(
            businessTaxPreviousLoan.text.isNotEmpty
                ? businessTaxPreviousLoan.text
                : '0');
        monthlyBusinessExpense.entertainmentPreviousLoan = double.parse(
            businessLabourExpensePreviousLoan.text.isNotEmpty
                ? businessLabourExpensePreviousLoan.text
                : '0');
        monthlyBusinessExpense.otherBusinessExpensePrevLoan = double.parse(
            businessOtherBusinessExpensePreviousLoan.text.isNotEmpty
                ? businessOtherBusinessExpensePreviousLoan.text
                : '0');

        repository
            .setBusinessExpenseMonthly(monthlyBusinessExpense)
            .then((value) => {
                  if (value.success == true)
                    {
                      CommonMethods.showMessage(
                          context, 'Submitted', ColorResources.APP_THEME_COLOR),
                      Navigator.pop(context),
                      tabController.animateTo(tabController.index + 1),
                    }
                  else
                    {
                      Navigator.pop(context),
                      CommonMethods.showMessage(
                          context, 'Not Submitted', ColorResources.REJECT_COLOR)
                    }
                });
      }

      if (tabController.index == 7) {
        OtherIncomeMonthly otherIncomeMonthly = OtherIncomeMonthly();

        otherIncomeMonthly.customerId = customerID;
        otherIncomeMonthly.agricultureIncome = double.parse(
            agricultureIncome.text.isNotEmpty ? agricultureIncome.text : '0');
        otherIncomeMonthly.agricultureIncomePreviousLoan = double.parse(
            agricultureIncomePreviousLoan.text.isNotEmpty
                ? agricultureIncomePreviousLoan.text
                : '0');
        otherIncomeMonthly.rentalIncome = double.parse(
            rentalIncome.text.isNotEmpty ? rentalIncome.text : '0');
        otherIncomeMonthly.rentalIncomePreviousLoan = double.parse(
            rentalIncomePreviousLoan.text.isNotEmpty
                ? rentalIncomePreviousLoan.text
                : '0');

        otherIncomeMonthly.salaryIncomeFM = double.parse(
            familyMemberSalaryIncome.text.isNotEmpty
                ? familyMemberSalaryIncome.text
                : '0');
        otherIncomeMonthly.salaryIncomeFMPreviousLoan = double.parse(
            familyMemberSalaryIncomePreviousLoan.text.isNotEmpty
                ? familyMemberSalaryIncomePreviousLoan.text
                : '0');
        otherIncomeMonthly.alliedAgriIncome = double.parse(
            alliedAgriIncome.text.isNotEmpty ? alliedAgriIncome.text : '0');
        otherIncomeMonthly.alliedAgriIncomePreviousLoan = double.parse(
            alliedAgriIncomePreviousLoan.text.isNotEmpty
                ? alliedAgriIncomePreviousLoan.text
                : '0');

        otherIncomeMonthly.otherIncome =
            double.parse(otherIncome.text.isNotEmpty ? otherIncome.text : '0');
        otherIncomeMonthly.otherIncomePreviousLoan = double.parse(
            otherIncomPreviousLoan.text.isNotEmpty
                ? otherIncomPreviousLoan.text
                : '0');
        repository.setOtherIncomeMonthly(otherIncomeMonthly).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 8) {
        PersonalExpenseDetails monthlyPersonalExpense =
            PersonalExpenseDetails();

        monthlyPersonalExpense.customerId = customerID;
        monthlyPersonalExpense.houserent = double.parse(
            personalExpenseHouseRent.text.isNotEmpty
                ? personalExpenseHouseRent.text
                : '0');
        monthlyPersonalExpense.houserentpreviousloan = double.parse(
            personalExpenseHouseRentPrevious.text.isNotEmpty
                ? personalExpenseHouseRentPrevious.text
                : '0');
        monthlyPersonalExpense.food = double.parse(
            personalExpenseFood.text.isNotEmpty
                ? personalExpenseFood.text
                : '0');
        monthlyPersonalExpense.foodpreviousloan = double.parse(
            personalExpenseFoodPrevious.text.isNotEmpty
                ? personalExpenseFoodPrevious.text
                : '0');
        monthlyPersonalExpense.clothing = double.parse(
            personalExpenseCloth.text.isNotEmpty
                ? personalExpenseCloth.text
                : '0');
        monthlyPersonalExpense.clothingpreviousloan = double.parse(
            personalExpenseClothPrevious.text.isNotEmpty
                ? personalExpenseClothPrevious.text
                : '0');
        monthlyPersonalExpense.educationmonthly = double.parse(
            personalExpenseEducation.text.isNotEmpty
                ? personalExpenseEducation.text
                : '0');
        monthlyPersonalExpense.educationmonthlypreviousloan = double.parse(
            personalExpenseEducationPrevious.text.isNotEmpty
                ? personalExpenseEducationPrevious.text
                : '0');
        monthlyPersonalExpense.electricity = double.parse(
            personalExpenseElectricity.text.isNotEmpty
                ? personalExpenseElectricity.text
                : '0');
        monthlyPersonalExpense.electricitypreviousloan = double.parse(
            personalExpenseElectricityPrevious.text.isNotEmpty
                ? personalExpenseElectricityPrevious.text
                : '0');
        monthlyPersonalExpense.transportconveyance = double.parse(
            personalExpenseTransport.text.isNotEmpty
                ? personalExpenseTransport.text
                : '0');
        monthlyPersonalExpense.transportconveyanceprevloan = double.parse(
            personalExpenseTransportPrevious.text.isNotEmpty
                ? personalExpenseTransportPrevious.text
                : '0');
        monthlyPersonalExpense.telmobileinter = double.parse(
            personalExpenseMobileInternet.text.isNotEmpty
                ? personalExpenseMobileInternet.text
                : '0');
        monthlyPersonalExpense.telmobileinterprevloan = double.parse(
            personalExpenseMobileInternetPrevious.text.isNotEmpty
                ? personalExpenseMobileInternetPrevious.text
                : '0');

        //previous
        monthlyPersonalExpense.medical = double.parse(
            personalExpenseMedical.text.isNotEmpty
                ? personalExpenseMedical.text
                : '0');
        monthlyPersonalExpense.medicalpreviousloan = double.parse(
            personalExpenseMedicalPrevious.text.isNotEmpty
                ? personalExpenseMedicalPrevious.text
                : '0');
        monthlyPersonalExpense.entertainment = double.parse(
            personalExpenseEntertainment.text.isNotEmpty
                ? personalExpenseEntertainment.text
                : '0');
        monthlyPersonalExpense.entertainmentpreviousloan = double.parse(
            personalExpenseEntertainmentPrevious.text.isNotEmpty
                ? personalExpenseEntertainmentPrevious.text
                : '0');
        monthlyPersonalExpense.repairmaintenance = double.parse(
            personalExpenseRepairNMaintenance.text.isNotEmpty
                ? personalExpenseRepairNMaintenance.text
                : '0');
        monthlyPersonalExpense.repairmaintenancepreviousloan = double.parse(
            personalExpenseRepairNMaintenancePrevious.text.isNotEmpty
                ? personalExpenseRepairNMaintenancePrevious.text
                : '0');
        monthlyPersonalExpense.maid = double.parse(
            personalExpenseMaid.text.isNotEmpty
                ? personalExpenseMaid.text
                : '0');
        monthlyPersonalExpense.maidpreviousloan = double.parse(
            personalExpenseMaidPrevious.text.isNotEmpty
                ? personalExpenseMaidPrevious.text
                : '0');
        monthlyPersonalExpense.housetax = double.parse(
            personalExpenseHouseTax.text.isNotEmpty
                ? personalExpenseHouseTax.text
                : '0');
        monthlyPersonalExpense.housetaxpreviousloan = double.parse(
            personalExpenseHouseTaxPrevious.text.isNotEmpty
                ? personalExpenseHouseTaxPrevious.text
                : '0');
        monthlyPersonalExpense.anyotherexpense = double.parse(
            personalExpenseOtherExpense.text.isNotEmpty
                ? personalExpenseOtherExpense.text
                : '0');
        monthlyPersonalExpense.anyotherexpensepreviousloan = double.parse(
            personalExpenseOtherExpensePrevious.text.isNotEmpty
                ? personalExpenseOtherExpensePrevious.text
                : '0');

        repository
            .setPersonalExpenseMonthly(monthlyPersonalExpense)
            .then((value) => {
                  if (value.success == true)
                    {
                      CommonMethods.showMessage(
                          context, 'Submitted', ColorResources.APP_THEME_COLOR),
                      Navigator.pop(context),
                      tabController.animateTo(tabController.index + 1),
                    }
                  else
                    {
                      Navigator.pop(context),
                      CommonMethods.showMessage(
                          context, 'Not Submitted', ColorResources.REJECT_COLOR)
                    }
                });
      }

      if (tabController.index == 9) {
        var productList = [];
        var map;

        existingLoansCubit.getLoanList().forEach((element) {
          //print('In Product List');
          map = {
            // "exloanid": element.exloanid,
            "customerid": customerID,
            "nameofinstitution": element.nameofinstitution,
            "loanamount": element.loanamount,
            "emi": element.emi,
            "loanoutstanding": element.loanoutstanding,
            "tenor": element.tenor,
            "paidtenor": element.paidtenor,
            "balancetenor": element.balancetenor,
            "loantobeclosed": element.loantobeclosed,
            "obligate": element.obligate,
            "previousloanobligation": element.previousloanobligation
          };

          productList.add(map);
        });

        repository.setExistingLoans(productList).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 10) {
        RegularInvestment regularInvestment = RegularInvestment();

        regularInvestment.customerId = customerID;
        regularInvestment.lifeinsurance = double.parse(
            investmentLifeInsurance.text.isNotEmpty
                ? investmentLifeInsurance.text
                : '0');
        regularInvestment.lifeinsurancepreviousloan = double.parse(
            investmentLifeInsurancePreviousLoan.text.isNotEmpty
                ? investmentLifeInsurancePreviousLoan.text
                : '0');
        regularInvestment.generalinsurance = double.parse(
            investmentGeneralInsurance.text.isNotEmpty
                ? investmentGeneralInsurance.text
                : '0');
        regularInvestment.generalinsurancepreviousloan = double.parse(
            investmentGeneralInsurancePreviousLoan.text.isNotEmpty
                ? investmentGeneralInsurancePreviousLoan.text
                : '0');

        regularInvestment.dps = double.parse(
            investmentDPS.text.isNotEmpty ? investmentDPS.text : '0');
        regularInvestment.dpspreviousloan = double.parse(
            investmentDPSPreviousLoan.text.isNotEmpty
                ? investmentDPSPreviousLoan.text
                : '0');
        regularInvestment.grossmargininbusiness = double.parse(
            investmentGrossMargin.text.isNotEmpty
                ? investmentGrossMargin.text
                : '0');
        regularInvestment.grossmargininbusinessprevloan = double.parse(
            investmentGrossMarginPreviousLoan.text.isNotEmpty
                ? investmentGrossMarginPreviousLoan.text
                : '0');

        regularInvestment.monthlycashinhandfrombusiness = double.parse(
            investmentMonthlyCashInhand.text.isNotEmpty
                ? investmentMonthlyCashInhand.text
                : '0');
        regularInvestment.cashinhandfrombusiprevloan = double.parse(
            investmentMonthlyCashInhandPreviousLoan.text.isNotEmpty
                ? investmentMonthlyCashInhandPreviousLoan.text
                : '0');

        repository.setRegularInvestment(regularInvestment).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 11) {
        var productList = [];
        var map;

        blocProductSale.getProductList().forEach((element) {
          map = {
            "customerId": customerID,
            "typeOfProduct": element.typeOfProduct,
            "numberOfUnits": element.numberOfUnits,
            "averagePricePerUnit": element.pricePerService
          };

          productList.add(map);
        });

        repository.setProductSalePrice(productList).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 12) {
        var productList = [];
        var map;

        blocProductPurchase.getProductList().forEach((element) {
          map = {
            "customerId": customerID,
            "typeOfProduct": element.typeOfProduct,
            "numberOfUnits": element.numberOfUnits,
            "averagePricePerUnit": element.pricePerService
          };

          productList.add(map);
        });

        repository.setProductPurchasePrice(productList).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  tabController.animateTo(tabController.index + 1),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR)
                }
            });
      }

      if (tabController.index == 13) {
        var manufecturingList = [];
        var map;

        manufecturingOptionOneCubit.getManufacturingList().forEach((element) {
          map = {
            "customerId": customerID,
            "typeOfProduct": element.typeOfProduct,
            "numberOfUnits": element.numberOfUnits,
            "averageSalePricePerUnit": element.averageSalePrize,
            "productionCostPerUnit": element.costPerUnit
          };

          manufecturingList.add(map);
        });

        repository
            .setManufacturingOptionOne(manufecturingList)
            .then((value) => {
                  if (value.success == true)
                    {
                      CommonMethods.showMessage(
                          context, 'Submitted', ColorResources.APP_THEME_COLOR),
                      Navigator.pop(context),
                      tabController.animateTo(tabController.index + 1),
                    }
                  else
                    {
                      Navigator.pop(context),
                      CommonMethods.showMessage(
                          context, 'Not Submitted', ColorResources.REJECT_COLOR)
                    }
                });
      }

      if (tabController.index == 14) {
        var manufecturingList = [];
        var map;
        map = {
          "customerId": customerID,
          "materialCost": double.parse(
              materialCost.text.isNotEmpty ? materialCost.text : '0'),
          "otherCashCost": double.parse(
              otherCashCost.text.isNotEmpty ? otherCashCost.text : '0'),
          "averageSalesPerMonth": double.parse(
              averageSaleVolume.text.isNotEmpty ? averageSaleVolume.text : '0'),
        };

        manufecturingList.add(map);

        repository
            .setManufacturingOptionTwo(manufecturingList)
            .then((value) => {
                  if (value.success == true)
                    {
                      CommonMethods.showMessage(
                          context, 'Submitted', ColorResources.APP_THEME_COLOR),
                      Navigator.pop(context),
                      tabController.animateTo(tabController.index + 1),
                    }
                  else
                    {
                      Navigator.pop(context),
                      CommonMethods.showMessage(context, 'Not Submitted',
                          ColorResources.REJECT_COLOR),
                    }
                });
      }
    } else {
      if (tabController.index == 15) {
        QualitativeAspects qualitativeAspects = QualitativeAspects();

        qualitativeAspects.customerId = customerID;
        qualitativeAspects.promoter = promoter.text;
        qualitativeAspects.businessActivity = businessActivity.text;
        qualitativeAspects.marketAndDemand = marketNDemand.text;
        qualitativeAspects.recommendation = recommendation.text;

        repository.setQualitativeAspects(qualitativeAspects).then((value) => {
              if (value.success == true)
                {
                  CommonMethods.showMessage(
                      context, 'Submitted', ColorResources.APP_THEME_COLOR),
                  Navigator.pop(context),
                  Navigator.pushNamed(context, OutputSheet.routeName,
                      arguments: CustomerDetailsArguments(
                        widget.arguments.memberID,
                        customerID,
                        true,
                        '',
                      )),
                }
              else
                {
                  Navigator.pop(context),
                  CommonMethods.showMessage(
                      context, 'Not Submitted', ColorResources.REJECT_COLOR),
                }
            });
      }
    }
  }
}
